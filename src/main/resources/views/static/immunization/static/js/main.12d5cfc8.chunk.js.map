{"version":3,"sources":["main/webapp/jsx/utils/queryKeys.js","main/webapp/api.js","main/webapp/jsx/services/fetchAllPatients.js","main/webapp/jsx/utils/calculateAge.js","main/webapp/jsx/utils/queryClient.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/services/fetchAllVaccinatedPatients.js","main/webapp/jsx/components/Patient/PatientVaccinatedList.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/services/fetchPatientVaccinationHistory.js","main/webapp/jsx/services/archiveImmunization.js","main/webapp/jsx/customHooks/useArchiveImmunization.js","main/webapp/jsx/components/Vaccination/VaccinationHistory.js","main/webapp/jsx/utils/determineClientRoutineImmunizationVaccine.js","main/webapp/jsx/services/fetchRoutineImmunizationVaccine.js","main/webapp/jsx/components/Immunization/useImmunizationFormSchema.js","main/webapp/jsx/services/saveImmunization.js","main/webapp/jsx/customHooks/useSaveImmunization.js","main/webapp/jsx/components/Immunization/CreateRoutineImmunization.js","main/webapp/jsx/services/fetchImmunizationById.js","main/webapp/jsx/services/updateImmunization.js","main/webapp/jsx/customHooks/useUpdateImmunization.js","main/webapp/jsx/components/Immunization/UpdateRoutineImmunization.js","main/webapp/jsx/components/Immunization/ImmunizationHome.js","main/webapp/jsx/components/Tetanus/useTetanusFormValidationSchema.js","main/webapp/jsx/components/Tetanus/CreateTetanusImmunization.js","main/webapp/jsx/components/Tetanus/UpdateTetanusImmunization.js","main/webapp/jsx/components/Tetanus/TetanusHome.js","main/webapp/jsx/services/fetchCodeset.js","main/webapp/jsx/services/fetchCovidVaccines.js","main/webapp/jsx/components/Covid/covidFirstVaccinationValidationSchema.js","main/webapp/jsx/components/Covid/CreateCovidVaccination.js","main/webapp/jsx/components/Covid/UpdateCovidVaccination.js","main/webapp/jsx/components/Covid/CovidVaccinationHome.js","main/webapp/jsx/components/History/RecentActivities.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["getPatientDataKey","getVaccinatedPatientDataKey","url","token","URLSearchParams","window","location","search","get","fetchAllPatients","async","page","pageSize","_ref","axios","concat","baseUrl","headers","Authorization","data","calculateAge","dob","today","Date","birthDate","age_now","getFullYear","m","getMonth","getDate","queryClientSettings","defaultOptions","queries","retry","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","cacheTime","refetchInterval","refetchIntervalInBackground","suspense","staleTime","Infinity","mutations","queryClient","QueryClient","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","showPPI","setShowPPI","useState","query","setQueryParams","handleCheckBox","e","target","checked","isLoading","refetch","useQuery","onSuccess","nextPage","queryKey","prefetchQuery","prefetchNextPage","children","MaterialTable","icons","title","columns","field","hidden","render","row","firstName","surname","otherName","filtering","_row$identifier","_row$identifier$ident","currentIdentifier","identifier","filter","obj","type","pop","value","gender","display","dateOfBirth","Link","to","pathname","route","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","size","Button","color","MdDashboard","fontSize","fontWeight","components","Toolbar","className","name","id","onChange","border","borderRadius","htmlFor","MTableToolbar","records","totalCount","totalRecords","currentPage","options","headerStyle","searchFieldStyle","margingLeft","paging","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","onChangePage","newPage","prevFilters","fetchAllVaccinatedPatients","response","_row$uniqueImmunizati","_row$uniqueImmunizati2","_row$uniqueImmunizati3","_row$uniqueImmunizati4","lastname","uniqueImmunizationData","patientDto","_row$uniqueImmunizati5","_row$uniqueImmunizati6","_row$uniqueImmunizati7","_row$uniqueImmunizati8","_row$uniqueImmunizati9","_row$uniqueImmunizati10","sex","_row$uniqueImmunizati11","_row$uniqueImmunizati12","Label","_row$uniqueImmunizati13","array","uniqueMap","Map","forEach","item","set","patientId","Array","from","values","removeDuplicatePatients","content","totalElements","pageNumber","divStyle","Home","key","setKey","marginTop","marginBottom","startIcon","FaUserPlus","textTransform","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","PatientList","PatientVaccinatedList","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","classes","useEffect","ExpansionPanel","ExpansionPanelSummary","md","root2","lastName","ButtonMui","TiArrowBack","participantId","_obj$identifier","_obj$identifier$ident","_identifiers$pop","identifiers","call","getHospitalNumber","dateParts","split","dateObject","calculate_age","moment","format","phoneNumber","contactPoint","find","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Divider","SubMenu","patientProp","activeItem","setActiveItem","patientAge","calculateAgeNoText","Menu","inverted","Item","onClick","setActiveContent","activeContent","actionType","fetchPatientVaccinationHistory","config","archiveImmunzation","put","useArchiveImmunization","mutate","isError","useMutation","mutationFn","toast","success","invalidateQueries","refetchQueries","onError","error","PatientsVaccinaionHistory","_props$patientObj","LoadViewPage","action","immunizationType","vaccineType","vaccinationDate","position","Dropdown","Icon","LoadDeletePage","determineClientImmunization","startDate","endDate","clientAgeInWeeks","diff","clientAgeInMonths","clientAgeInYears","fetchRoutineImmunizationVaccine","code","useImmunizationFormValidationSchema","onSubmit","initialValues","immunizationFormIntialValues","vaccineDetail","missedVaccine","missedVaccineType","ImmunizationFormInitialSchema","yup","required","when","is","then","otherwise","formik","useFormik","validationSchema","saveImmunization","post","useSaveImmunization","resetForm","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","makeStyles","card","margin","flexDirection","form","submit","cardBottom","Select","button","demo","background","default","inline","CreateRoutineImmunization","_props$patientObj2","_formik$values2","_formik$touched","_formik$values3","_formik$touched2","_formik$values4","_formik$touched3","_formik$values5","_formik$touched4","_formik$values6","_formik$values7","_formik$touched5","clientDateOfBirth","vaccines","isLoadingMissedVaccine","handleSubmit","_props$patientObj3","_props$patientObj4","_formik$values","Object","keys","fieldName","setFieldTouched","errorObj","validateForm","isValid","length","payload","patientUuid","uuid","history","useHistory","CardContent","Form","Input","handleChange","max","onBlur","handleBlur","touched","errors","map","vacc","setFieldValue","disabled","MatButton","SaveIcon","CancelIcon","push","fetchImmunizationById","updateImmunization","args","useUpdateImmunization","UpdateRoutineImmunization","_props$activeContent2","_props$activeContent4","disableInputs","formInitialValue","setFormInitialValue","_props$activeContent","_props$activeContent3","_data$uniqueImmunizat","_data$uniqueImmunizat2","_data$uniqueImmunizat3","_data$uniqueImmunizat4","setValues","readOnly","Immunization","componentMap","create","update","view","_Fragment","mapCompoenentToActionType","useTetanusFormValidationSchema","tetanusFormValidationSchema","CreateTetanusImmunizationTetanus","tetanusVaccines","FormGroup","disable","UpdateTetanusImmunizationTetanus","isLoadingMutate","Spinner","TetanusHome","CreateTetanusImmunization","fetchCodesets","fetchCovidVaccines","useCovidVaccinationFormValidationSchema","covidFirstVaccValidationSchema","workInHealthSector","vaccinationDosage","knownMedicalCondition","medicalCondition","toLowerCase","adverseEffect","adverseEffectOption","vaccinationFacility","batchNumber","CreateCovidVaccination","_formik$values8","_formik$values9","_formik$touched6","_formik$values10","_formik$touched7","_formik$values11","_formik$touched8","_formik$values12","_formik$touched9","_formik$values13","_formik$values14","_formik$touched10","_formik$values15","_formik$touched11","covidAdverseEffects","_content$filter","_content$filter2","_content$filter3","firstDose","secondDose","setPatientVaccinationDosage","for","adverseEffects","vaccine","UpdateCovidVaccination","_formik$values16","dosage","_data$uniqueImmunizat5","_data$uniqueImmunizat6","_data$uniqueImmunizat7","_data$uniqueImmunizat8","_data$uniqueImmunizat9","_data$uniqueImmunizat10","_data$uniqueImmunizat11","CovidVaccinationHome","ToastContainer","autoClose","hideProgressBar","RecentActivities","_data$content","_data$content$map","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","PerfectScrollbar","Accordion","defaultActiveKey","index","Toggle","as","Text","Collapse","viewBox","version","stroke","strokeWidth","fill","fillRule","x","y","cx","cy","r","art","setArt","activeTab","useMemo","PatientCardDetail","PatientVaccinationHistory","ImmunizationHome","Tetanus","flexGrow","RegisterPatient","_relatives$address","basicInfo","setBasicInfo","active","streetAddress","contact","deceased","deceasedDateTime","genderId","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","age","altPhonenumber","countryId","stateId","district","sexId","ninNumber","relatives","setRelatives","phone","email","relationshipId","middleName","contactArray","allContacts","setAllContacts","saving","setSaving","disabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","patientFacilityId","setPatientFacilityId","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","setErrors","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","patientDTO","setPatientDTO","person","hivEnrollment","userDetail","user","useLocation","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","open","setOpen","React","toggle","locationState","getPatient","useCallback","_patient$contact","_patient$contact2","_identifiers$identifi","_contactPoint$contact","_contactPoint$contact2","_contactPoint$contact3","_patient$maritalStatu","_patient$education","_patient$employmentSt","sexCodeset","patient","console","log","facilityId","hospitalNumber","_","upperFirst","lowerCase","phoneNumberFormatCheck","altphone","country","sort","catch","maritalStatus","education","employmentStatus","parseInt","landmark","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","GetCountry","setStateByCountryId","_phone$value","undefined","charAt","replace","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNumberLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","slice","handleInputChangePhoneNumber","inputName","NumberValue","margingRight","min","defaultChecked","ageNumber","currentDate","setDate","setMonth","dobNew","toISOString","maritalStatusOption","occupationOption","educationOption","getCountryId","_item$address","splice","handleDeleteRelative","FontAwesomeIcon","relative","checkPhoneNumber","contactEmail","handleSaveRelationship","validateRelatives","temp","test","every","fullName","handleCancelSaveRelationship","AddIcon","handleAddRelative","preventDefault","validate","patientForm","organisationUnitId","postalCode","assignerId","errorMessage","apierror","message","subErrors","POSITION","BOTTOM_CENTER","handleCancel","Modal","show","centered","backdrop","Header","Title","Footer","App","Router","QueryClientProvider","client","Switch","Route","path","PatientDetail","RegisterPatientPage","ReactQueryDevtools","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","alert","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","fontFamily","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.12d5cfc8.chunk.js","sourcesContent":["export const getPatientDataKey = \"GET_PATIENT_DATA\"\r\nexport const getVaccinatedPatientDataKey = \"GET_VACCINATED_PATIENT_DATA\"","export const url =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:8383/api/v1/\"\r\n    : \"/api/v1/\";\r\nexport const token =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNzEwNzgxOTgyfQ.IF9dZ1nn0b71XbhGgBTY7jMM6V98scYYpGgrrGQazvsmtY2_mNJUzPPt150NI03HTd7tZhJHAW6otwtpLF00zQ\"\r\n    : new URLSearchParams(window.location.search).get(\"jwt\");\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"./../../api\";\r\n\r\nexport const fetchAllPatients = async ({ page, pageSize, search }) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}patient?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n  return response.data;\r\n};\r\n","export const calculateAge = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n\r\n  export const calculateAgeNoText = (dob) => {\r\n    const today = new Date();\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n    const m = today.getMonth() - birthDate.getMonth();\r\n\r\n    if (age_now <= 0 && m < 0 && today.getDate() < birthDate.getDate()) {\r\n      age_now--;\r\n    }\r\n\r\n    if (age_now === 0) {\r\n      return m;\r\n    }\r\n    return age_now;\r\n  };","import { QueryClient } from \"react-query\";\r\n\r\nconst queryClientSettings = {\r\n  defaultOptions: {\r\n    queries: {\r\n      retry: 2,\r\n      refetchOnMount: \"always\",\r\n      refetchOnWindowFocus: true,\r\n      refetchOnReconnect: true,\r\n      cacheTime: 60000,\r\n      refetchInterval: 3.6e6, //1 hour\r\n      refetchIntervalInBackground: true,\r\n      suspense: false,\r\n      staleTime: Infinity,\r\n    },\r\n    mutations: {\r\n      retry: 2,\r\n    },\r\n  },\r\n};\r\n\r\nexport const queryClient = new QueryClient(queryClientSettings);\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { useQuery } from \"react-query\";\r\nimport { getPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { fetchAllPatients } from \"../../services/fetchAllPatients\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { calculateAge } from \"../../utils/calculateAge\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\n//Date Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [getPatientDataKey, { ...query, page: nextPage }];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchAllPatients({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getPatientDataKey, query],\r\n    () => fetchAllPatients(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"firstName\",\r\n            hidden: showPPI,\r\n            render: (row) =>\r\n              row?.firstName + \" \" + row?.surname || row?.otherName || \"\",\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"participantId\",\r\n            filtering: false,\r\n            render: (row) => {\r\n              const identifiers = row?.identifier?.identifier?.filter((obj) => obj?.type === \"HospitalNumber\")\r\n              const currentIdentifier = identifiers.pop();\r\n              \r\n            return  (currentIdentifier?.value !== null ? currentIdentifier.value : \"\")\r\n            },\r\n          },\r\n          {\r\n            title: \"Sex\",\r\n            field: \"gender\",\r\n            filtering: false,\r\n            render: (row) => (row?.gender !== null ? row.gender.display : \"\"),\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            field: \"dateOfBirth\",\r\n            filtering: false,\r\n            render: (row) => calculateAge(row?.dateOfBirth),\r\n          },\r\n\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-vaccination-history\",\r\n                    route: \"patient-vaccination-history\",\r\n                    state: { patientObj: row },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                    >\r\n                      <MdDashboard />\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Patient Dashboard\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        data={data?.records || []}\r\n        totalCount={data?.totalRecords}\r\n        isLoading={isLoading}\r\n        page={data?.currentPage}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchAllVaccinatedPatients = async ({ page, pageSize, search }) => {\r\n \r\n  const response = await axios.get(\r\n    `${baseUrl}immunization/history/all?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchAllVaccinatedPatients } from \"../../services/fetchAllVaccinatedPatients\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport { calculateAge } from \"../../utils/calculateAge\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst Patients = (props) => {\r\n  const [showPPI, setShowPPI] = useState(true);\r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n  });\r\n  const handleCheckBox = (e) => {\r\n    if (e.target.checked) {\r\n      setShowPPI(false);\r\n    } else {\r\n      setShowPPI(true);\r\n    }\r\n  };\r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [\r\n      getVaccinatedPatientDataKey,\r\n      { ...query, page: nextPage },\r\n    ];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchAllVaccinatedPatients({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchAllVaccinatedPatients(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  function removeDuplicatePatients(array) {\r\n    const uniqueMap = new Map();\r\n    \r\n    if (array) {\r\n      // Iterate through the array\r\n    array.forEach(item => {\r\n      // Use patientId as key in the map\r\n      uniqueMap.set(item.patientId, item);\r\n    });\r\n    \r\n    // Convert the map back to an array of objects\r\n    const uniqueArray = Array.from(uniqueMap.values());\r\n    \r\n    return uniqueArray;\r\n    }\r\n\r\n    return []\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Find Patient\"\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  name=\"showPP!\"\r\n                  id=\"showPP\"\r\n                  value=\"showPP\"\r\n                  checked={showPPI === true ? false : true}\r\n                  onChange={handleCheckBox}\r\n                  style={{\r\n                    border: \"1px solid #014D88\",\r\n                    borderRadius: \"0.25rem\",\r\n                  }}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"basic_checkbox_1\">\r\n                  <b style={{ color: \"#014d88\", fontWeight: \"bold\" }}>\r\n                    SHOW PII\r\n                  </b>\r\n                </label>\r\n              </div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        columns={[\r\n          {\r\n            title: \"Patient Name\",\r\n            field: \"firstName\",\r\n            hidden: showPPI,\r\n            render: (row) => {\r\n              const lastname = row?.uniqueImmunizationData?.patientDto?.lastname;\r\n              const firstName = row?.uniqueImmunizationData?.patientDto?.firstName;\r\n              return firstName + \" \" + lastname;\r\n            },\r\n          },\r\n          {\r\n            title: \"Hospital Number\",\r\n            field: \"participantId\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.patientDto?.identifier?.identifier[0]?.value,\r\n          },\r\n          {\r\n            title: \"Sex\",\r\n            field: \"gender\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.patientDto?.sex,\r\n          },\r\n          {\r\n            title: \"Age\",\r\n            field: \"dob\",\r\n            filtering: false,\r\n            render: (row) =>\r\n              calculateAge(row?.uniqueImmunizationData?.patientDto?.dateOfBirth),\r\n          },\r\n\r\n          {\r\n            title: \"Vaccination Status\",\r\n            field: \"vaccinationStatus\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <Label color=\"blue\" size=\"mini\">\r\n                {\"Vaccinated\"}\r\n              </Label>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/patient-vaccination-history\",\r\n                    state: { patientObj: row?.uniqueImmunizationData?.patientDto },\r\n                  }}\r\n                >\r\n                  <ButtonGroup\r\n                    variant=\"contained\"\r\n                    aria-label=\"split button\"\r\n                    style={{\r\n                      backgroundColor: \"rgb(153, 46, 98)\",\r\n                      height: \"30px\",\r\n                      width: \"215px\",\r\n                    }}\r\n                    size=\"large\"\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      aria-label=\"select merge strategy\"\r\n                      aria-haspopup=\"menu\"\r\n                      style={{ backgroundColor: \"rgb(153, 46, 98)\" }}\r\n                    >\r\n                      <MdDashboard />\r\n                    </Button>\r\n                    <Button style={{ backgroundColor: \"rgb(153, 46, 98)\" }}>\r\n                      <span\r\n                        style={{\r\n                          fontSize: \"10px\",\r\n                          color: \"#fff\",\r\n                          fontWeight: \"bolder\",\r\n                        }}\r\n                      >\r\n                        Patient Dashboard\r\n                      </span>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </Link>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        data={removeDuplicatePatients(data?.content) || []}\r\n        totalCount={data?.totalElements}\r\n        isLoading={isLoading}\r\n        page={data?.pageNumber}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Tab, Tabs } from \"react-bootstrap\";\r\nimport PatientList from \"./Patient/PatientList\";\r\nimport PatientVaccinatedList from \"./Patient/PatientVaccinatedList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n  const [key, setKey] = useState(\"home\");\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>Immunization</h4>\r\n          </li>\r\n        </ol>\r\n\r\n        <div>\r\n          <Link to={\"register-patient\"}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\" float-end mb-10\"\r\n              startIcon={<FaUserPlus size=\"10\" />}\r\n              style={{ backgroundColor: \"#014d88\" }}\r\n            >\r\n              <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <Row style={{ marginTop: \"20px\" }}>\r\n        <Col xl={12}>\r\n          <Card style={divStyle}>\r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                  id=\"controlled-tab-example\"\r\n                  activeKey={key}\r\n                  onSelect={(k) => setKey(k)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                    <PatientList />\r\n                  </Tab>\r\n                  <Tab eventKey=\"vaccinated\" title=\"All Vaccinated Patients\">\r\n                    <PatientVaccinatedList />\r\n                  </Tab>\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObj = props.patientObj;\r\n  \r\n\r\n  useEffect(() => {\r\n    //PatientCurrentStatus();\r\n    //CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  const calculate_age = (dob) => {\r\n    var today = new Date();\r\n    var dateParts = dob.split(\"-\");\r\n    var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n    var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n    var age_now = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      age_now--;\r\n    }\r\n    if (age_now === 0) {\r\n      return m + \" month(s)\";\r\n    }\r\n    return age_now + \" year(s)\";\r\n  };\r\n  const getPhoneNumber = (identifier) => {\r\n    const identifiers = identifier;\r\n    const phoneNumber = identifiers.contactPoint.find(\r\n      (obj) => obj.type === \"phone\"\r\n    );\r\n    return phoneNumber ? phoneNumber.value : \"\";\r\n  };\r\n  const getAddress = (identifier) => {\r\n    const identifiers = identifier;\r\n    const address = identifiers.address.find((obj) => obj.city);\r\n    const houseAddress =\r\n      address && address.line[0] !== null ? address.line[0] : \"\";\r\n    const landMark =\r\n      address && address.city && address.city !== null ? address.city : \"\";\r\n    return address ? houseAddress + \" \" + landMark : \"\";\r\n  };\r\n\r\n  const getLastName = (obj) => {\r\n    if (obj && obj.lastName) {\r\n      return obj.lastName;\r\n    } else if (obj && obj.surname) {\r\n      return obj.surname;\r\n    } else if (obj && obj.otherName) {\r\n      return obj.otherName;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const getHospitalNumber = (obj) => {\r\n    if (obj && obj.participantId) {\r\n      return obj.participantId\r\n    }else {\r\n    \r\n      const identifiers = obj?.identifier?.identifier?.filter((obj) => obj?.type === \"HospitalNumber\") || []\r\n      const currentIdentifier = identifiers?.pop?.() || null;\r\n      \r\n    return  (currentIdentifier?.value !== null ? currentIdentifier.value : \"\")\r\n    }\r\n  \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary>\r\n          <Row>\r\n            <Col md={12}>\r\n              <Row className={\"mt-1\"}>\r\n                <Col md={12} className={classes.root2}>\r\n                  <b style={{ fontSize: \"25px\", color: \"rgb(153, 46, 98)\" }}>\r\n                    {patientObj.firstName + \" \" + getLastName(patientObj)}\r\n                  </b>\r\n                  <Link to={\"/\"}>\r\n                    <ButtonMui\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className=\" float-end ms-2 mr-2 mt-2\"\r\n                      //startIcon={<FaUserPlus size=\"10\"/>}\r\n                      startIcon={<TiArrowBack />}\r\n                      style={{\r\n                        backgroundColor: \"rgb(153, 46, 98)\",\r\n                        color: \"#fff\",\r\n                        height: \"35px\",\r\n                      }}\r\n                    >\r\n                      <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                    </ButtonMui>\r\n                  </Link>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Patient ID :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getHospitalNumber(patientObj)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    Date Of Birth :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj?.dob || patientObj?.dateOfBirth}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Age :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {calculate_age(\r\n                        moment(\r\n                          patientObj.dob || patientObj?.dateOfBirth\r\n                        ).format(\"DD-MM-YYYY\")\r\n                      )}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Gender :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {patientObj.gender !== null\r\n                        ? patientObj.gender.display\r\n                        : \"\"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Phone Number :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getPhoneNumber(patientObj.contactPoint)}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n                <Col md={4} className={classes.root2}>\r\n                  <span>\r\n                    {\" \"}\r\n                    Address :{\" \"}\r\n                    <b style={{ color: \"#0B72AA\" }}>\r\n                      {getAddress(patientObj.address)}{\" \"}\r\n                    </b>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </ExpansionPanelSummary>\r\n        <Divider />\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { calculateAgeNoText } from \"../../utils/calculateAge\";\r\n\r\nfunction SubMenu(props) {\r\n  const patientProp = props.patientObj ? props.patientObj : {};\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [activeItem, setActiveItem] = useState(\"patient-vaccination-history\");\r\n  const [patientObj] = useState(patientProp);\r\n  const [patientAge] = useState(\r\n    calculateAgeNoText(patientObj?.dob || patientObj?.dateOfBirth) || 0\r\n  );\r\n\r\n  const onClickHome = (row) => {\r\n    props.setActiveContent({ ...props.activeContent, route: \"patient-vaccination-history\" });\r\n  };\r\n\r\n  const onClickImmunization = (row) => {\r\n    setActiveItem(\"immunization\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"routine-immunization-patient\",\r\n      actionType: \"create\",\r\n    });\r\n  };\r\n\r\n  const onClickTetanus = (row) => {\r\n    setActiveItem(\"tetanus\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"tetanus-patient\",\r\n      actionType: \"create\",\r\n    });\r\n  };\r\n\r\n  const onClickCovid = (row) => {\r\n    setActiveItem(\"covid\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"covid-patient\",\r\n      actionType: \"create\",\r\n    });\r\n  };\r\n\r\n  const loadPatientVaccinationHistory = () => {\r\n    setActiveItem(\"history\");\r\n    props.setActiveContent({\r\n      ...props.activeContent,\r\n      route: \"vaccination-history\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"20px\" }}>\r\n      <Menu size=\"large\" color={\"black\"} inverted>\r\n        <Menu.Item onClick={() => onClickHome()}> Home</Menu.Item>\r\n        <Menu.Item onClick={() => onClickImmunization()}>\r\n          {\" \"}\r\n          Routine Immunization\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => onClickTetanus()}> Tetanus </Menu.Item>\r\n        {patientAge >= 5 && (\r\n          <Menu.Item onClick={onClickCovid}> COVID-19 </Menu.Item>\r\n        )}\r\n        <Menu.Item onClick={() => loadPatientVaccinationHistory(patientObj)}>\r\n          History\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubMenu;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchPatientVaccinationHistory = async ({\r\n  page,\r\n  pageSize,\r\n  search,\r\n  id,\r\n}) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}immunization/history/${id}?pageSize=${pageSize}&pageNo=${page}&searchParam=${search}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nconst config = {\r\n  headers: { Authorization: `Bearer ${token}` },\r\n};\r\n\r\nexport const archiveImmunzation = async (id) => {\r\n  const response = await axios.put(\r\n    `${baseUrl}immunization/${id}/archive`,\r\n    null,\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import { useMutation } from \"react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { queryClient } from \"../utils/queryClient\";\r\nimport { archiveImmunzation } from \"../services/archiveImmunization\";\r\n\r\nexport const useArchiveImmunization = (props) => {\r\n \r\n\r\n  const { mutate, isLoading, isError } = useMutation({\r\n    mutationFn: archiveImmunzation,\r\n    onSuccess: () => {\r\n      toast.success(\"Immunization deleted successful.\");\r\n      queryClient.invalidateQueries()\r\n      queryClient.refetchQueries();\r\n      props.setActiveContent({ ...props.activeContent, route: \"patient-vaccination-history\" });\r\n\r\n    },\r\n\r\n    onError: () => {\r\n      toast.error(\"Immunization deletion failed\");\r\n    },\r\n  });\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    isError,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { forwardRef } from \"react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { useQuery } from \"react-query\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\nimport { fetchPatientVaccinationHistory } from \"../../services/fetchPatientVaccinationHistory\";\r\nimport { Dropdown, Menu, Icon } from \"semantic-ui-react\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { useArchiveImmunization } from \"../../customHooks/useArchiveImmunization\";\r\n\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst PatientsVaccinaionHistory = (props) => {\r\n  \r\n  const [query, setQueryParams] = useState({\r\n    page: 0,\r\n    pageSize: 10,\r\n    search: \"\",\r\n    id: props?.patientObj?.id,\r\n  });\r\n \r\n\r\n  const prefetchNextPage = async () => {\r\n    const nextPage = query.page + 1;\r\n    // Use the same query key as in the useQuery hook\r\n    const queryKey = [\r\n      getVaccinatedPatientDataKey,\r\n      { ...query, page: nextPage },\r\n    ];\r\n    await queryClient.prefetchQuery(queryKey, () =>\r\n      fetchPatientVaccinationHistory({ ...query, page: nextPage })\r\n    );\r\n  };\r\n\r\n  const { data, isLoading, refetch } = useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchPatientVaccinationHistory(query),\r\n    {\r\n      onSuccess: () => prefetchNextPage(),\r\n    }\r\n  );\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.immunizationType === \"ROUTINE_IMMUNIZATION\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"routine-immunization-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.immunizationType === \"TETANUS_IMMUNIZATION\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"tetanus-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"covid-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n\r\n  const LoadDeletePage = (row) => {\r\n    mutate(row.id);\r\n  };\r\n\r\n  const { mutate } = useArchiveImmunization(props);\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Patient Vaccination History\"\r\n        components={{\r\n          Toolbar: (props) => (\r\n            <div>\r\n              <MTableToolbar {...props} />\r\n            </div>\r\n          ),\r\n        }}\r\n        columns={[\r\n          {\r\n            title: \"Immunization Type\",\r\n            field: \"immunizationType\",\r\n            filtering: true,\r\n            // hidden: showPPI,\r\n          },\r\n          {\r\n            title: \"Vaccine Type\",\r\n            field: \"vaccineType\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.vaccineType,\r\n          },\r\n          {\r\n            title: \"Vaccination Date\",\r\n            field: \"vaccinationDate\",\r\n            filtering: false,\r\n            render: (row) => row?.uniqueImmunizationData?.vaccinationDate,\r\n          },\r\n\r\n          {\r\n            title: \"Actions\",\r\n            field: \"actions\",\r\n            filtering: false,\r\n            render: (row) => (\r\n              <div>\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item>\r\n                    <Button\r\n                      style={{ backgroundColor: \"rgb(153,46,98)\" }}\r\n                      primary\r\n                    >\r\n                      <Dropdown item text=\"Action\">\r\n                        <Dropdown.Menu style={{ marginTop: \"10px\" }}>\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadViewPage(row, \"view\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"eye\" />\r\n                            View{\" \"}\r\n                          </Dropdown.Item>\r\n\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadViewPage(row, \"update\")}\r\n                          >\r\n                            <Icon name=\"edit\" />\r\n                            Edit\r\n                          </Dropdown.Item>\r\n\r\n                          <Dropdown.Item\r\n                            onClick={() => LoadDeletePage(row, \"delete\")}\r\n                          >\r\n                            {\" \"}\r\n                            <Icon name=\"trash\" /> Delete\r\n                          </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </Button>\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </div>\r\n            ),\r\n          },\r\n        ]}\r\n        data={data?.content || []}\r\n        totalCount={data?.totalElements}\r\n        isLoading={isLoading}\r\n        page={data?.pageNumber}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          paging: true,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: query?.pageSize || 10,\r\n          debounceInterval: 400,\r\n        }}\r\n        onChangePage={(newPage) => {\r\n          setQueryParams((prevFilters) => ({ ...prevFilters, page: newPage }));\r\n          refetch(query);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientsVaccinaionHistory;\r\n","import * as moment from \"moment\";\r\n\r\nexport const determineClientImmunization = (dateOfBirth) => {\r\n  const startDate = moment(dateOfBirth);\r\n  const endDate = moment();\r\n  const clientAgeInWeeks = endDate.diff(startDate, \"weeks\");\r\n  const clientAgeInMonths = endDate.diff(startDate, \"months\");\r\n  const clientAgeInYears = endDate.diff(startDate, \"years\");\r\n\r\n  if (clientAgeInWeeks < 6) {\r\n    //if client is less than six weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_BIRTH\";\r\n  } else if (clientAgeInWeeks >= 6 && clientAgeInWeeks < 10) {\r\n    // if client is 6 weeks or above but still less than 10 weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_6 WEEKS\";\r\n  } else if (clientAgeInWeeks >= 10 && clientAgeInWeeks < 14) {\r\n    // if client is 10 weeks or above but still less than 14 weeks\r\n    return \"IMMUNIZATION_VACCINE_AT_10 WEEKS\";\r\n  } else if (clientAgeInWeeks >= 14 && clientAgeInMonths < 6) {\r\n    // if client is 14 weeks or above but still less than 6 months\r\n    return \"IMMUNIZATION_VACCINE_AT_14 WEEKS\";\r\n  } else if (clientAgeInMonths >= 6 && clientAgeInMonths < 9) {\r\n    // if client is 6 months or above but still less than 9 months\r\n    return \"IMMUNIZATION_VACCINE_AT_6 MONTHS\";\r\n  } else if (clientAgeInMonths >= 9 && clientAgeInMonths < 15) {\r\n    // if client is 9 months or above but still less than 15 months\r\n    return \"IMMUNIZATION_VACCINE_AT_9 MONTHS\";\r\n  } else if (clientAgeInMonths >= 15 && clientAgeInYears < 9) {\r\n    // if client is 15 months or above but still less than 9 years\r\n    return \"IMMUNIZATION_VACCINE_AT_15 MONTHS\";\r\n  } else if (clientAgeInYears >= 9) {\r\n    // if client is 9 years or above\r\n    return \"IMMUNIZATION_VACCINE_AT_9 YEARS\";\r\n  }\r\n  return \"ROUTINE_IMMUNIZATION_VACCINE_TYPE\";\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchRoutineImmunizationVaccine = async (code) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}application-codesets/v2/${code}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useImmunizationFormValidationSchema = (\r\n  onSubmit,\r\n  initialValues\r\n) => {\r\n  const immunizationFormIntialValues = {\r\n    vaccineType: \"\",\r\n    vaccineDetail: \"\",\r\n    missedVaccine: \"\",\r\n    missedVaccineType: \"\",\r\n    vaccinationDate: \"\",\r\n  };\r\n\r\n  const ImmunizationFormInitialSchema = yup.object({\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n    vaccinationDate: yup.string().required(\"This field is required\"),\r\n    vaccineDetail: yup.string().required(\"This field is required\"),\r\n    missedVaccine: yup.string().required(\"This field is required\"),\r\n    missedVaccineType: yup.string().when(\"missedVaccine\", {\r\n      is: (missedVaccine) => missedVaccine === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: initialValues\r\n      ? { ...immunizationFormIntialValues, ...initialValues }\r\n      : immunizationFormIntialValues,\r\n    onSubmit,\r\n    validationSchema: ImmunizationFormInitialSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const saveImmunization = async (data) => {\r\n  const response = await axios.post(`${baseUrl}immunization`, data, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n  return response.data;\r\n};\r\n","import { useMutation } from \"react-query\";\r\nimport { saveImmunization } from \"../services/saveImmunization\";\r\nimport { toast } from \"react-toastify\";\r\nimport { queryClient } from \"../utils/queryClient\";\r\n\r\nexport const useSaveImmunization = (formik, props) => {\r\n \r\n\r\n  const { mutate, isLoading, isError } = useMutation({\r\n    mutationFn: saveImmunization,\r\n    onSuccess: () => {\r\n      toast.success(\"Routine Immunization saved successful.\");\r\n      formik.resetForm();\r\n      queryClient.invalidateQueries()\r\n      queryClient.refetchQueries()\r\n      props.setActiveContent({ ...props.activeContent, route: \"patient-vaccination-history\" });\r\n    },\r\n  });\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    isError,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\n// import { queryClient } from \"../../utils/queryClient\";\r\nimport { determineClientImmunization } from \"../../utils/determineClientRoutineImmunizationVaccine\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport { useImmunizationFormValidationSchema } from \"./useImmunizationFormSchema\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport moment from \"moment\";\r\nimport { useSaveImmunization } from \"../../customHooks/useSaveImmunization\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CreateRoutineImmunization = (props) => {\r\n  const classes = useStyles();\r\n  const clientDateOfBirth =\r\n    props?.patientObj?.dateOfBirth || props?.patientObj?.dob;\r\n\r\n  const [queryKey] = useState(determineClientImmunization(clientDateOfBirth));\r\n\r\n  const { data: vaccines, isLoading } = useQuery([queryKey], () =>\r\n    fetchRoutineImmunizationVaccine(queryKey)\r\n  );\r\n\r\n  const { data: missedVaccine, isLoading: isLoadingMissedVaccine } = useQuery(\r\n    [\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"ROUTINE_IMMUNIZATION\",\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n       patientDto: props.patientObj\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate(payload);\r\n    }\r\n  };\r\n  const { formik } = useImmunizationFormValidationSchema(handleSubmit);\r\n  const { mutate } = useSaveImmunization(formik, props);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card className={classes.root} style={{ marginTop: 20 }}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  {\" \"}\r\n                  Routine Immunization\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Date of vaccination\r\n\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"vaccinationDate\"\r\n                      id=\"vaccinationDate\"\r\n                      type=\"date\"\r\n                      onChange={formik.handleChange}\r\n                      {...{\r\n                        max: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccinationDate}\r\n                    />\r\n                    {formik?.touched?.vaccinationDate &&\r\n                      formik?.errors.vaccinationDate && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccinationDate}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineType}\r\n                    >\r\n                      <option value=\"\">Select vaccine type</option>\r\n                      {vaccines?.map((vacc) => (\r\n                        <option key={vacc?.id} value={vacc?.code}>\r\n                          {vacc?.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Detail of vaccine\r\n\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"vaccineDetail\"\r\n                      id=\"vaccineDetail\"\r\n                      style={{\r\n                        height: 150,\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineDetail}\r\n                    />\r\n                    {formik?.touched?.vaccineDetail &&\r\n                      formik?.errors.vaccineDetail && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineDetail}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Any missed vaccination ?\r\n\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"missedVaccine\"\r\n                      id=\"missedVaccine\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        formik.setFieldValue(\"missedVaccineType\", \"\");\r\n                        formik.handleChange(e);\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.missedVaccine}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n\r\n                      <option value={\"yes\"}>Yes</option>\r\n                      <option value={\"no\"}>No</option>\r\n                    </select>\r\n\r\n                    {formik?.touched?.missedVaccine &&\r\n                      formik?.errors.missedVaccine && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.missedVaccine}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  {formik?.values?.missedVaccine === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <Label>\r\n                        Enter missed vaccine{\" \"}\r\n                        {isLoadingMissedVaccine && \"Loading vaccine ...\"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"missedVaccineType\"\r\n                        id=\"missedVaccineType\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik?.values?.missedVaccineType}\r\n                        disabled={isLoadingMissedVaccine}\r\n                      >\r\n                        <option value=\"\">Select vaccine type</option>\r\n                        {missedVaccine?.map((vacc) => (\r\n                          <option key={vacc?.id} value={vacc?.code}>\r\n                            {vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {formik?.touched?.missedVaccineType &&\r\n                        formik?.errors.missedVaccineType && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.missedVaccineType}\r\n                          </span>\r\n                        )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!isLoading ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: \"/\",\r\n                  state: { patientObj: props?.patientObj },\r\n                })\r\n              }\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CreateRoutineImmunization;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchImmunizationById = async (id) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}immunization/${id}`,\r\n    { headers: { Authorization: `Bearer ${token}` } }\r\n  );\r\n\r\n  return response?.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nconst config = {\r\n  headers: { Authorization: `Bearer ${token}` },\r\n};\r\n\r\nexport const updateImmunization = async (args) => {\r\n  \r\n\r\n  const response = await axios.put(\r\n    `${baseUrl}immunization/${args.id}`,\r\n    {\r\n      ...args.data,\r\n    },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\n","import { useMutation } from \"react-query\";\r\nimport { toast } from \"react-toastify\";\r\nimport { queryClient } from \"../utils/queryClient\";\r\nimport { updateImmunization } from \"../services/updateImmunization\";\r\n\r\nexport const useUpdateImmunization = (formik, props) => {\r\n\r\n  const { mutate, isLoading, isError } = useMutation({\r\n    mutationFn: updateImmunization,\r\n    onSuccess: () => {\r\n      toast.success(\"Routine Immunization updated successful.\");\r\n      formik.resetForm();\r\n      queryClient.invalidateQueries()\r\n      queryClient.refetchQueries()\r\n      props.setActiveContent({ ...props.activeContent, route: \"patient-vaccination-history\" });\r\n    },\r\n  });\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    isError,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\n// import { queryClient } from \"../../utils/queryClient\";\r\nimport { determineClientImmunization } from \"../../utils/determineClientRoutineImmunizationVaccine\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport { useImmunizationFormValidationSchema } from \"./useImmunizationFormSchema\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport moment from \"moment\";\r\nimport { fetchImmunizationById } from \"../../services/fetchImmunizationById\";\r\nimport { useUpdateImmunization } from \"../../customHooks/useUpdateImmunization\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UpdateRoutineImmunization = (props) => {\r\n  const disableInputs = props?.disableInputs;\r\n  const classes = useStyles();\r\n  const clientDateOfBirth =\r\n    props?.patientObj?.dateOfBirth || props?.patientObj?.dob;\r\n\r\n  const [queryKey] = useState(determineClientImmunization(clientDateOfBirth));\r\n  const [formInitialValue, setFormInitialValue] = useState(null)\r\n  const { data: vaccines, isLoading } = useQuery([queryKey], () =>\r\n    fetchRoutineImmunizationVaccine(queryKey)\r\n  );\r\n\r\n  const { data: missedVaccine, isLoading: isLoadingMissedVaccine } = useQuery(\r\n    [\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"ROUTINE_IMMUNIZATION_VACCINE_TYPE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"ROUTINE_IMMUNIZATION\",\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n       patientDto: props.patientObj\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate({ data: payload, id: props?.activeContent?.id });\r\n    }\r\n  };\r\n\r\n  const { formik } = useImmunizationFormValidationSchema(handleSubmit);\r\n  const { mutate } = useUpdateImmunization(formik, props);\r\n  const history = useHistory();\r\n\r\n  useQuery(\r\n    [\"FETCH_IMMUNIZATION_BY_ID\", props?.activeContent?.id],\r\n    () => fetchImmunizationById(props?.activeContent?.id),\r\n    {\r\n      onSuccess: (data) => {\r\n        const initialValues = {\r\n          immunizationType: data?.immunizationType,\r\n          vaccinationDate: data?.vaccinationDate,\r\n          vaccineType: data?.uniqueImmunizationData?.vaccineType,\r\n          vaccineDetail: data?.uniqueImmunizationData?.vaccineDetail,\r\n          missedVaccine: data?.uniqueImmunizationData?.missedVaccine,\r\n          missedVaccineType: data?.uniqueImmunizationData?.missedVaccineType,\r\n        };\r\n        if (formInitialValue === null) {\r\n          setFormInitialValue(initialValues)\r\n          formik.setValues(initialValues);\r\n        }\r\n      },\r\n      refetchOnMount: \"always\",\r\n\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root} style={{ marginTop: 20 }}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  {\" \"}\r\n                  Routine Immunization {`(${props?.activeContent?.actionType})`}\r\n                </h5>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Date of vaccination\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"form-control\"\r\n                      name=\"vaccinationDate\"\r\n                      id=\"vaccinationDate\"\r\n                      type=\"date\"\r\n                      onChange={formik.handleChange}\r\n                      {...{\r\n                        max: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      }}\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccinationDate}\r\n                    />\r\n                    {formik?.touched?.vaccinationDate &&\r\n                      formik?.errors.vaccinationDate && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccinationDate}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineType}\r\n                    >\r\n                      <option value=\"\">Select vaccine type</option>\r\n                      {vaccines?.map((vacc) => (\r\n                        <option key={vacc?.id} value={vacc?.code}>\r\n                          {vacc?.display}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Detail of vaccine\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"vaccineDetail\"\r\n                      id=\"vaccineDetail\"\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                      style={{\r\n                        height: 150,\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.vaccineDetail}\r\n                    />\r\n                    {formik?.touched?.vaccineDetail &&\r\n                      formik?.errors.vaccineDetail && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineDetail}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group mb-3 col-md-12\">\r\n                    <Label>Any missed vaccination ?\r\n                    <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"missedVaccine\"\r\n                      id=\"missedVaccine\"\r\n                      style={{\r\n                        border: \"1px solid #014D88\",\r\n                        borderRadius: \"0.2rem\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        formik.setFieldValue(\"missedVaccineType\", \"\");\r\n                        formik.handleChange(e);\r\n                      }}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik?.values?.missedVaccine}\r\n                      disabled={disableInputs}\r\n                      readOnly={disableInputs}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n\r\n                      <option value={\"yes\"}>Yes</option>\r\n                      <option value={\"no\"}>No</option>\r\n                    </select>\r\n\r\n                    {formik?.touched?.missedVaccine &&\r\n                      formik?.errors.missedVaccine && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.missedVaccine}\r\n                        </span>\r\n                      )}\r\n                  </div>\r\n\r\n                  {formik?.values?.missedVaccine === \"yes\" && (\r\n                    <div className=\"form-group mb-3 col-md-12\">\r\n                      <Label>\r\n                        Enter missed vaccine{\" \"}\r\n                        {isLoadingMissedVaccine && \"Loading vaccine ...\"}\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <select\r\n                        className=\"form-control\"\r\n                        name=\"missedVaccineType\"\r\n                        id=\"missedVaccineType\"\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik?.values?.missedVaccineType}\r\n                        disabled={isLoadingMissedVaccine || disableInputs}\r\n                        readOnly={disableInputs}\r\n                      >\r\n                        <option value=\"\">Select vaccine type</option>\r\n                        {missedVaccine?.map((vacc) => (\r\n                          <option key={vacc?.id} value={vacc?.code}>\r\n                            {vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      {formik?.touched?.missedVaccineType &&\r\n                        formik?.errors.missedVaccineType && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.missedVaccineType}\r\n                          </span>\r\n                        )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {!disableInputs && (\r\n              <MatButton\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                onClick={handleSubmit}\r\n              >\r\n                {!isLoading ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>\r\n                    Updating...\r\n                  </span>\r\n                )}\r\n              </MatButton>\r\n            )}\r\n            {!disableInputs && (\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/\",\r\n                    state: { patientObj: props?.patientObj },\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateRoutineImmunization;\r\n","import React from \"react\";\r\nimport CreateRoutineImmunization from \"./CreateRoutineImmunization\";\r\nimport UpdateRoutineImmunization from \"./UpdateRoutineImmunization\";\r\n\r\nconst Immunization = (props) => {\r\n  const actionType = props?.activeContent?.actionType || \"create\";\r\n\r\n  const componentMap = {\r\n    create: <CreateRoutineImmunization {...props} />,\r\n    update: <UpdateRoutineImmunization {...props} disableInputs={false}/>,\r\n    view: <UpdateRoutineImmunization {...props} disableInputs={true} />,\r\n  };\r\n\r\n  const mapCompoenentToActionType = (actionType) => {\r\n    if (!actionType) {\r\n      return componentMap[\"create\"];\r\n    }\r\n\r\n    return componentMap[actionType];\r\n  };\r\n\r\n  return <>{mapCompoenentToActionType(actionType)}</>;\r\n};\r\n\r\nexport default Immunization;\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useTetanusFormValidationSchema = (onSubmit) => {\r\n  const tetanusIntialValues = {\r\n    vaccineType: \"\",\r\n    vaccinationDate: \"\",\r\n  };\r\n\r\n  const tetanusFormValidationSchema = yup.object({\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n\r\n    vaccinationDate: yup.date().when(\"vaccineType\", {\r\n      is: (vaccineType) => vaccineType !== \"\",\r\n      then: yup.date().required(\"This field is required\"),\r\n      otherwise: yup.date(),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: tetanusIntialValues,\r\n    onSubmit,\r\n    validationSchema: tetanusFormValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","import React from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { Card, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useTetanusFormValidationSchema } from \"./useTetanusFormValidationSchema\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport moment from \"moment\";\r\nimport { useSaveImmunization } from \"../../customHooks/useSaveImmunization\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CreateTetanusImmunizationTetanus = (props) => {\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  const { data: tetanusVaccines, isLoading } = useQuery(\r\n    [\"TETANUS_VACCINE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"TETANUS_VACCINE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"TETANUS_IMMUNIZATION\",\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n        patientDto: props.patientObj,\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate(payload);\r\n    }\r\n  };\r\n\r\n  const { formik } = useTetanusFormValidationSchema(handleSubmit);\r\n  const { mutate } = useSaveImmunization(formik, props);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Tetanus\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values?.vaccineType}\r\n                      disable={isLoading}\r\n                    >\r\n                      <option>Select</option>\r\n                      {!isLoading &&\r\n                        tetanusVaccines?.map((vacc) => (\r\n                          <option  value={vacc?.code} key={vacc?.id}>\r\n                            {vacc?.name || vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                    </Input>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {formik?.values?.vaccineType !== \"\" && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Vaccination Date\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"vaccinationDate\"\r\n                        id=\"vaccinationDate\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values?.vaccinationDate}\r\n                        {...{\r\n                          max: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                        }}\r\n                      />\r\n\r\n                      {formik?.touched?.vaccinationDate &&\r\n                        formik?.errors.vaccinationDate && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.vaccinationDate}\r\n                          </span>\r\n                        )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <MatButton\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n            >\r\n              {!false ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n\r\n            <MatButton\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              startIcon={<CancelIcon />}\r\n              style={{ backgroundColor: \"#992E62\" }}\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: \"/\",\r\n                  state: { patientObj: props?.patientObj },\r\n                })\r\n              }\r\n            >\r\n              <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                Cancel\r\n              </span>\r\n            </MatButton>\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CreateTetanusImmunizationTetanus;\r\n","import React, { useState } from \"react\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { Card, Form, FormGroup, Input, Label, Spinner } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useTetanusFormValidationSchema } from \"./useTetanusFormValidationSchema\";\r\nimport { fetchRoutineImmunizationVaccine } from \"../../services/fetchRoutineImmunizationVaccine\";\r\nimport { useUpdateImmunization } from \"../../customHooks/useUpdateImmunization\";\r\nimport { fetchImmunizationById } from \"../../services/fetchImmunizationById\";\r\nimport moment from \"moment\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UpdateTetanusImmunizationTetanus = (props) => {\r\n  const [formInitialValue, setFormInitialValue] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const disableInputs = props?.disableInputs;\r\n\r\n  const classes = useStyles();\r\n\r\n  const { data: tetanusVaccines, isLoading } = useQuery(\r\n    [\"TETANUS_VACCINE\"],\r\n    () => fetchRoutineImmunizationVaccine(\"TETANUS_VACCINE\")\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"TETANUS_IMMUNIZATION\",\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n        patientDto: props.patientObj,\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate({ data: payload, id: props?.activeContent?.id });\r\n    }\r\n  };  \r\n\r\n  const { formik } = useTetanusFormValidationSchema(handleSubmit);\r\n  const { mutate, isLoading: isLoadingMutate } = useUpdateImmunization(formik, props);\r\n  useQuery(\r\n    [\"FETCH_IMMUNIZATION_BY_ID\", props?.activeContent?.id],\r\n    () => fetchImmunizationById(props?.activeContent?.id),\r\n    {\r\n      onSuccess: (data) => {\r\n        const initialValues = {\r\n          vaccinationDate: data?.vaccinationDate,\r\n          vaccineType: data?.uniqueImmunizationData?.vaccineType,\r\n        };\r\n        if (formInitialValue === null) {\r\n          setFormInitialValue(initialValues);\r\n          formik.setValues(initialValues);\r\n        }\r\n      },\r\n      refetchOnMount: \"always\",\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <Form>\r\n            <div className=\"card\">\r\n              <div\r\n                className=\"card-header\"\r\n                style={{\r\n                  backgroundColor: \"#014d88\",\r\n                  color: \"#fff\",\r\n                  fontWeight: \"bolder\",\r\n                  borderRadius: \"0.2rem\",\r\n                }}\r\n              >\r\n                <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                  Tetanus {`(${props?.activeContent?.actionType})`}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-6\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Type of vaccine {isLoading && \"Loading vaccine ...\"}\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccineType\"\r\n                      id=\"vaccineType\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values?.vaccineType}\r\n                      disabled={disableInputs || isLoading}\r\n                      readOnly={disableInputs}\r\n                    >\r\n                      <option>Select</option>\r\n                      {!isLoading &&\r\n                        tetanusVaccines?.map((vacc) => (\r\n                          <option value={vacc.code} key={vacc?.id}>\r\n                            {vacc?.name || vacc?.display}\r\n                          </option>\r\n                        ))}\r\n                    </Input>\r\n\r\n                    {formik?.touched?.vaccineType &&\r\n                      formik?.errors.vaccineType && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccineType}\r\n                        </span>\r\n                      )}\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                {formik?.values?.vaccineType !== \"\" && (\r\n                  <div className=\"form-group mb-3 col-md-6\">\r\n                    <FormGroup>\r\n                      <Label>\r\n                        Vaccination Date\r\n                        <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"date\"\r\n                        name=\"vaccinationDate\"\r\n                        id=\"vaccinationDate\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values?.vaccinationDate}\r\n                        disabled={disableInputs}\r\n                        readOnly={disableInputs}\r\n                        {...{\r\n                            max: moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                          }}\r\n                      />\r\n\r\n                      {formik?.touched?.vaccinationDate &&\r\n                        formik?.errors.vaccinationDate && (\r\n                          <span className={classes.error}>\r\n                            {formik?.errors.vaccinationDate}\r\n                          </span>\r\n                        )}\r\n                    </FormGroup>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            {isLoadingMutate ? <Spinner /> : \"\"}\r\n            <br />\r\n            {!disableInputs && (\r\n            <MatButton\r\n              type=\"button\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              startIcon={<SaveIcon />}\r\n              onClick={handleSubmit}\r\n              style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n            >\r\n              {!isLoadingMutate ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n              )}\r\n            </MatButton>)}\r\n\r\n\r\n            {!disableInputs && (\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={() =>\r\n                  history.push({\r\n                    pathname: \"/\",\r\n                    state: { patientObj: props?.patientObj },\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UpdateTetanusImmunizationTetanus;\r\n","import React from \"react\";\r\nimport CreateTetanusImmunization from \"./CreateTetanusImmunization\";\r\nimport UpdateTetanusImmunizationTetanus from \"./UpdateTetanusImmunization\";\r\n\r\nconst TetanusHome = (props) => {\r\n  const actionType = props?.activeContent?.actionType || \"create\";\r\n\r\n  const componentMap = {\r\n    create: <CreateTetanusImmunization {...props} />,\r\n    update: (\r\n      <UpdateTetanusImmunizationTetanus {...props} disableInputs={false} />\r\n    ),\r\n    view: <UpdateTetanusImmunizationTetanus {...props} disableInputs={true} />,\r\n  };\r\n\r\n  const mapCompoenentToActionType = (actionType) => {\r\n    if (!actionType) {\r\n      return componentMap[\"create\"];\r\n    }\r\n\r\n    return componentMap[actionType];\r\n  };\r\n\r\n  return <>{mapCompoenentToActionType(actionType)}</>;\r\n};\r\n\r\nexport default TetanusHome;\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchCodesets = async (code) => {\r\n  const response = await axios.get(\r\n    `${baseUrl}application-codesets/v2/${code}`,\r\n    {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  return response.data;\r\n};\r\n","import axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../api\";\r\n\r\nexport const fetchCovidVaccines = async (code) => {\r\n  const response = await axios.get(`${baseUrl}covid/codeset?category=VACCINE`, {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  return response.data;\r\n};\r\n","import { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const useCovidVaccinationFormValidationSchema = (onSubmit) => {\r\n  const covidFirstVaccinationInitialValue = {\r\n    workInHealthSector: \"\",\r\n    knownMedicalCondition: \"\",\r\n    medicalCondition: \"\",\r\n    adverseEffect: \"\",\r\n    adverseEffectOption: \"\",\r\n    vaccineType: \"\",\r\n    vaccinationDate: \"\",\r\n    location: \"\",\r\n    vaccinationFacility: \"\",\r\n    batchNumber: \"\",\r\n    vaccinationDosage: \"\"\r\n  };\r\n\r\n  const covidFirstVaccValidationSchema = yup.object({\r\n    workInHealthSector: yup.string().required(\"This field is required\"),\r\n    vaccinationDosage: yup.string().required(\"This field is required\"),\r\n\r\n    knownMedicalCondition: yup.string().required(\"This field is required\"),\r\n\r\n    medicalCondition: yup.string().when(\"knownMedicalCondition\", {\r\n      is: (knownMedicalCondition) =>\r\n        knownMedicalCondition?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    adverseEffect: yup.string().required(\"This field is required\"),\r\n\r\n    adverseEffectOption: yup.string().when(\"adverseEffect\", {\r\n      is: (adverseEffect) => adverseEffect?.toLowerCase() === \"yes\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    vaccineType: yup.string().required(\"This field is required\"),\r\n\r\n    vaccinationDate: yup.date().required(\"This field is required\"),\r\n\r\n    location: yup.string().required(\"This field is required\"),\r\n\r\n    vaccinationFacility: yup.string().when(\"location\", {\r\n      is: (location) => location?.toLowerCase() === \"facility\",\r\n      then: yup.string().required(\"This field is required\"),\r\n      otherwise: yup.string(),\r\n    }),\r\n\r\n    batchNumber: yup.string().required(\"This field is required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: covidFirstVaccinationInitialValue,\r\n    onSubmit,\r\n    validationSchema: covidFirstVaccValidationSchema,\r\n  });\r\n  return { formik };\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport React, { useState } from \"react\";\r\nimport { FormGroup, Label, Input, Form, Spinner } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { fetchCodesets } from \"../../services/fetchCodeset\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCovidVaccines } from \"../../services/fetchCovidVaccines\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useCovidVaccinationFormValidationSchema } from \"./covidFirstVaccinationValidationSchema\";\r\nimport { useSaveImmunization } from \"../../customHooks/useSaveImmunization\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { fetchPatientVaccinationHistory } from \"../../services/fetchPatientVaccinationHistory\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst CreateCovidVaccination = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data: covidAdverseEffects } = useQuery(\r\n    [\"GET_CODESETS\", \"COVID_ADVERSE_EFFECT\"],\r\n    () => fetchCodesets(\"COVID_ADVERSE_EFFECT\")\r\n  );\r\n\r\n  const { data: vaccines } = useQuery([\"COVID_VACCINES\"], () =>\r\n    fetchCovidVaccines()\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"COVID_IMMUNIZATION\",\r\n\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n        patientDto: props.patientObj,\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate(payload);\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const { formik } = useCovidVaccinationFormValidationSchema(handleSubmit);\r\n  const { mutate } = useSaveImmunization(formik, props);\r\n\r\n  const actionType = props?.activeContent?.actionType || \"create\";\r\n\r\n  const [query] = useState({\r\n    page: 0,\r\n    pageSize: 20,\r\n    search: \"\",\r\n    id: props?.patientObj?.id,\r\n  });\r\n\r\n  const setPatientVaccinationDosage = (content) => {\r\n    const firstDose =\r\n      content?.filter(\r\n        (data) => data.uniqueImmunizationData?.vaccinationDosage === \"FIRST\"\r\n      )?.[0] || null;\r\n    const secondDose =\r\n      content?.filter(\r\n        (data) => data.uniqueImmunizationData?.vaccinationDosage === \"SECOND\"\r\n      )?.[0] || null;\r\n    const boosterDose =\r\n      content?.filter(\r\n        (data) => data.uniqueImmunizationData?.vaccinationDosage === \"BOOSTER\"\r\n      )?.[0] || null;\r\n\r\n    if (boosterDose) {\r\n      formik?.setFieldValue(\"vaccinationDosage\", \"BOOSTER\");\r\n    } else if (secondDose) {\r\n      formik?.setFieldValue(\"vaccinationDosage\", \"BOOSTER\");\r\n    } else if (firstDose) {\r\n      formik?.setFieldValue(\"vaccinationDosage\", \"SECOND\");\r\n    } else {\r\n      formik?.setFieldValue(\"vaccinationDosage\", \"FIRST\");\r\n    }\r\n  };\r\n\r\n  useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchPatientVaccinationHistory(query),\r\n    {\r\n      onSuccess: (data) => setPatientVaccinationDosage(data?.content),\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Vaccine Dosage\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccinationDosage\"\r\n                      id=\"vaccinationDosage\"\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values?.vaccinationDosage}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n                      <option value=\"FIRST\">FIRST</option>\r\n                      <option value=\"SECOND\">SECOND</option>\r\n                      <option value=\"BOOSTER\">BOOSTER</option>\r\n                    </Input>\r\n\r\n                    {formik?.touched?.vaccinationDosage &&\r\n                      formik?.errors.vaccinationDosage && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccinationDosage}\r\n                        </span>\r\n                      )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    COVID-19 Vaccination\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Do you work in the Health sector ?\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"workInHealthSector\"\r\n                          id=\"workInHealthSector\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.workInHealthSector}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.workInHealthSector &&\r\n                          formik?.errors.workInHealthSector && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.workInHealthSector}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Any known medical condition ?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"knownMedicalCondition\"\r\n                          id=\"knownMedicalCondition\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.knownMedicalCondition}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.knownMedicalCondition &&\r\n                          formik?.errors.knownMedicalCondition && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.knownMedicalCondition}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.knownMedicalCondition === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"medicalCondition\">\r\n                            Medical conditions{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"medicalCondition\"\r\n                            id=\"medicalCondition\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.medicalCondition}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {formik?.touched?.medicalCondition &&\r\n                            formik?.errors.medicalCondition && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.medicalCondition}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"adverseEffect\">\r\n                          Adverse Effect{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"adverseEffect\"\r\n                          id=\"adverseEffect\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.adverseEffect}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.adverseEffect &&\r\n                          formik?.errors.adverseEffect && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.adverseEffect}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.adverseEffect === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"adverseEffectOption\">\r\n                            Reaction Type (Adverse Effect){\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"adverseEffectOption\"\r\n                            id=\"adverseEffectOption\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.adverseEffectOption}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n\r\n                            {covidAdverseEffects?.map((adverseEffects) => (\r\n                              <option\r\n                                value={adverseEffects?.code}\r\n                                key={adverseEffects?.id}\r\n                              >\r\n                                {adverseEffects?.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n\r\n                          {formik?.touched?.adverseEffectOption &&\r\n                            formik?.errors.adverseEffectOption && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.adverseEffectOption}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"vaccineType\">\r\n                          Vaccine <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccineType\"\r\n                          id=\"vaccineType\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.vaccineType}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {vaccines?.map((vaccine) => (\r\n                            <option value={vaccine?.code} key={vaccine?.id}>\r\n                              {vaccine?.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n\r\n                        {formik?.touched?.vaccineType &&\r\n                          formik?.errors.vaccineType && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.vaccineType}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"vaccinationDate\">\r\n                          Date of vaccination\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"vaccinationDate\"\r\n                          id=\"vaccinationDate\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.vaccinationDate}\r\n                        />\r\n                        {formik?.touched?.vaccinationDate &&\r\n                          formik?.errors.vaccinationDate && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.vaccinationDate}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Location <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          id=\"location\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.location}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Facility\">Facility</option>\r\n                          <option value=\"Community\">Community</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.location &&\r\n                          formik?.errors.location && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.location}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.location === \"Facility\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"vaccinationFacility\">\r\n                            Facility Name\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"vaccinationFacility\"\r\n                            id=\"vaccinationFacility\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.vaccinationFacility}\r\n                          />\r\n\r\n                          {formik?.touched?.vaccinationFacility &&\r\n                            formik?.errors.vaccinationFacility && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.vaccinationFacility}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"batchNumber\">\r\n                          Batch Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"batchNumber\"\r\n                          id=\"batchNumber\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.batchNumber}\r\n                        />\r\n                        {formik?.touched?.batchNumber &&\r\n                          formik?.errors.batchNumber && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.batchNumber}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {false ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              <MatButton\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!false ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={() => history.push({ pathname: \"/\" })}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCovidVaccination;\r\n","import MatButton from \"@material-ui/core/Button\";\r\nimport React, { useState } from \"react\";\r\nimport { FormGroup, Label, Input, Form, Spinner } from \"reactstrap\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { fetchCodesets } from \"../../services/fetchCodeset\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCovidVaccines } from \"../../services/fetchCovidVaccines\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useCovidVaccinationFormValidationSchema } from \"./covidFirstVaccinationValidationSchema\";\r\nimport { fetchImmunizationById } from \"../../services/fetchImmunizationById\";\r\nimport { useUpdateImmunization } from \"../../customHooks/useUpdateImmunization\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { fetchPatientVaccinationHistory } from \"../../services/fetchPatientVaccinationHistory\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst UpdateCovidVaccination = (props) => {\r\n  const classes = useStyles();\r\n  const [formInitialValue, setFormInitialValue] = useState(null);\r\n  const disableInputs = props?.disableInputs;\r\n\r\n  const [query] = useState({\r\n    page: 0,\r\n    pageSize: 20,\r\n    search: \"\",\r\n    id: props?.patientObj?.id,\r\n  });\r\n\r\n  const { data: covidAdverseEffects } = useQuery(\r\n    [\"GET_CODESETS\", \"COVID_ADVERSE_EFFECT\"],\r\n    () => fetchCodesets(\"COVID_ADVERSE_EFFECT\")\r\n  );\r\n\r\n  const { data: vaccines } = useQuery([\"COVID_VACCINES\"], () =>\r\n    fetchCovidVaccines()\r\n  );\r\n\r\n  const handleSubmit = async () => {\r\n    Object.keys(formik?.initialValues).forEach((fieldName) => {\r\n      formik?.setFieldTouched(fieldName, true);\r\n    });\r\n    const errorObj = await formik.validateForm();\r\n    const isValid = Object.keys(errorObj).length === 0;\r\n\r\n    const payload = {\r\n      immunizationType: \"COVID_IMMUNIZATION\",\r\n      dosage: formik?.values?.vaccinationDosage,\r\n      patientId: props?.patientObj?.id,\r\n      patientUuid: props?.patientObj?.uuid,\r\n      vaccinationDate: formik?.values?.vaccinationDate,\r\n      uniqueImmunizationData: {\r\n        ...formik.values,\r\n        patientDto: props.patientObj,\r\n      },\r\n    };\r\n\r\n    if (isValid) {\r\n      mutate({ data: payload, id: props?.activeContent?.id });\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const { formik } = useCovidVaccinationFormValidationSchema(handleSubmit);\r\n  const { mutate, isLoading: isLoadingMutate } = useUpdateImmunization(formik, props);\r\n  useQuery(\r\n    [\"FETCH_IMMUNIZATION_BY_ID\", props?.activeContent?.id],\r\n    () => fetchImmunizationById(props?.activeContent?.id),\r\n    {\r\n      onSuccess: (data) => {\r\n        const initialValues = {\r\n          workInHealthSector: data?.uniqueImmunizationData?.workInHealthSector,\r\n          knownMedicalCondition:\r\n            data?.uniqueImmunizationData?.knownMedicalCondition,\r\n          medicalCondition: data?.uniqueImmunizationData?.medicalCondition,\r\n          adverseEffect: data?.uniqueImmunizationData?.adverseEffect,\r\n          adverseEffectOption:\r\n            data?.uniqueImmunizationData?.adverseEffectOption,\r\n          vaccineType: data?.uniqueImmunizationData?.vaccineType,\r\n          vaccinationDate: data?.uniqueImmunizationData?.vaccinationDate,\r\n          location: data?.uniqueImmunizationData?.location,\r\n          vaccinationFacility:\r\n            data?.uniqueImmunizationData?.vaccinationFacility,\r\n          batchNumber: data?.uniqueImmunizationData?.batchNumber,\r\n\r\n          vaccinationDosage: data?.uniqueImmunizationData?.vaccinationDosage,\r\n        };\r\n        if (formInitialValue === null) {\r\n          setFormInitialValue(initialValues);\r\n          formik.setValues(initialValues);\r\n        }\r\n      },\r\n      refetchOnMount: \"always\",\r\n    }\r\n  );\r\n\r\n  useQuery([getVaccinatedPatientDataKey, query], () =>\r\n    fetchPatientVaccinationHistory(query)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                    <Label>\r\n                      Vaccine Dosage\r\n                      <span style={{ color: \"red\" }}> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"vaccinationDosage\"\r\n                      id=\"vaccinationDosage\"\r\n                      disabled={disableInputs}\r\n                      onChange={formik.handleChange}\r\n                      onBlur={formik.handleBlur}\r\n                      value={formik.values?.vaccinationDosage}\r\n                      readOnly={disableInputs}\r\n                    >\r\n                      <option value=\"\">Select option</option>\r\n                      <option value=\"FIRST\">FIRST</option>\r\n                      <option value=\"SECOND\">SECOND</option>\r\n                      <option value=\"BOOSTER\">BOOSTER</option>\r\n                    </Input>\r\n\r\n                    {formik?.touched?.vaccinationDosage &&\r\n                      formik?.errors.vaccinationDosage && (\r\n                        <span className={classes.error}>\r\n                          {formik?.errors.vaccinationDosage}\r\n                        </span>\r\n                      )}\r\n                  </FormGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    COVID-19 Vaccination\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Do you work in the Health sector ?\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"workInHealthSector\"\r\n                          id=\"workInHealthSector\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.workInHealthSector}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.workInHealthSector &&\r\n                          formik?.errors.workInHealthSector && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.workInHealthSector}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Any known medical condition ?{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"knownMedicalCondition\"\r\n                          id=\"knownMedicalCondition\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.knownMedicalCondition}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.knownMedicalCondition &&\r\n                          formik?.errors.knownMedicalCondition && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.knownMedicalCondition}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.knownMedicalCondition === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"medicalCondition\">\r\n                            Medical conditions{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"medicalCondition\"\r\n                            id=\"medicalCondition\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.medicalCondition}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                            disabled={disableInputs}\r\n                            readOnly={disableInputs}\r\n                          />\r\n                          {formik?.touched?.medicalCondition &&\r\n                            formik?.errors.medicalCondition && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.medicalCondition}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"adverseEffect\">\r\n                          Adverse Effect{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"adverseEffect\"\r\n                          id=\"adverseEffect\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.adverseEffect}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"YES\">Yes</option>\r\n                          <option value=\"NO\">No</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.adverseEffect &&\r\n                          formik?.errors.adverseEffect && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.adverseEffect}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.adverseEffect === \"YES\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"adverseEffectOption\">\r\n                            Reaction Type (Adverse Effect){\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"select\"\r\n                            name=\"adverseEffectOption\"\r\n                            id=\"adverseEffectOption\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.adverseEffectOption}\r\n                            disabled={disableInputs}\r\n                            readOnly={disableInputs}\r\n                          >\r\n                            <option value=\"\">Select</option>\r\n\r\n                            {covidAdverseEffects?.map((adverseEffects) => (\r\n                              <option\r\n                                value={adverseEffects?.code}\r\n                                key={adverseEffects?.id}\r\n                              >\r\n                                {adverseEffects?.display}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n\r\n                          {formik?.touched?.adverseEffectOption &&\r\n                            formik?.errors.adverseEffectOption && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.adverseEffectOption}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"vaccineType\">\r\n                          Vaccine <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"vaccineType\"\r\n                          id=\"vaccineType\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.vaccineType}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {vaccines?.map((vaccine) => (\r\n                            <option value={vaccine?.code} key={vaccine?.id}>\r\n                              {vaccine?.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n\r\n                        {formik?.touched?.vaccineType &&\r\n                          formik?.errors.vaccineType && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.vaccineType}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"vaccinationDate\">\r\n                          Date of vaccination\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"date\"\r\n                          name=\"vaccinationDate\"\r\n                          id=\"vaccinationDate\"\r\n                          max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.vaccinationDate}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        />\r\n                        {formik?.touched?.vaccinationDate &&\r\n                          formik?.errors.vaccinationDate && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.vaccinationDate}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Location <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"location\"\r\n                          id=\"location\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.location}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          <option value=\"Facility\">Facility</option>\r\n                          <option value=\"Community\">Community</option>\r\n                        </Input>\r\n\r\n                        {formik?.touched?.location &&\r\n                          formik?.errors.location && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.location}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    {formik?.values?.location === \"Facility\" && (\r\n                      <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                          <Label for=\"vaccinationFacility\">\r\n                            Facility Name\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"vaccinationFacility\"\r\n                            id=\"vaccinationFacility\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values?.vaccinationFacility}\r\n                            disabled={disableInputs}\r\n                            readOnly={disableInputs}\r\n                          />\r\n\r\n                          {formik?.touched?.vaccinationFacility &&\r\n                            formik?.errors.vaccinationFacility && (\r\n                              <span className={classes.error}>\r\n                                {formik?.errors.vaccinationFacility}\r\n                              </span>\r\n                            )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                      <FormGroup>\r\n                        <Label for=\"batchNumber\">\r\n                          Batch Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"batchNumber\"\r\n                          id=\"batchNumber\"\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          value={formik.values?.batchNumber}\r\n                          disabled={disableInputs}\r\n                          readOnly={disableInputs}\r\n                        />\r\n                        {formik?.touched?.batchNumber &&\r\n                          formik?.errors.batchNumber && (\r\n                            <span className={classes.error}>\r\n                              {formik?.errors.batchNumber}\r\n                            </span>\r\n                          )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {isLoadingMutate ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n              {!disableInputs && (\r\n                <MatButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<SaveIcon />}\r\n                  onClick={handleSubmit}\r\n                  style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                >\r\n                  {!isLoadingMutate ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                  ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>\r\n                      Updating...\r\n                    </span>\r\n                  )}\r\n                </MatButton>\r\n              )}\r\n\r\n              {!disableInputs && (\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                  style={{ backgroundColor: \"#992E62\" }}\r\n                  onClick={() =>\r\n                    history.push({\r\n                      pathname: \"/\",\r\n                      state: { patientObj: props?.patientObj },\r\n                    })\r\n                  }\r\n                >\r\n                  <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                    Cancel\r\n                  </span>\r\n                </MatButton>\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCovidVaccination;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport CreateCovidVaccination from \"./CreateCovidVaccination\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { fetchPatientVaccinationHistory } from \"../../services/fetchPatientVaccinationHistory\";\r\nimport { useQuery } from \"react-query\";\r\nimport UpdateCovidVaccination from \"./UpdateCovidVaccination\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst CovidVaccinationHome = (props) => {\r\n  const actionType = props?.activeContent?.actionType || \"create\";\r\n\r\n  const [query] = useState({\r\n    page: 0,\r\n    pageSize: 20,\r\n    search: \"\",\r\n    id: props?.patientObj?.id,\r\n  });\r\n\r\n  const componentMap = {\r\n    create: <CreateCovidVaccination {...props} />,\r\n    update: <UpdateCovidVaccination {...props} disableInputs={false} />,\r\n    view: <UpdateCovidVaccination {...props} disableInputs={true} />,\r\n  };\r\n\r\n  const mapCompoenentToActionType = (actionType) => {\r\n    if (!actionType) {\r\n      return componentMap[\"create\"];\r\n    }\r\n    return componentMap[actionType];\r\n  };\r\n\r\n  useQuery([getVaccinatedPatientDataKey, query], () =>\r\n    fetchPatientVaccinationHistory(query)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n\r\n     \r\n\r\n      {mapCompoenentToActionType(actionType)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidVaccinationHome;\r\n","import React, { useState } from \"react\";\r\nimport { useArchiveImmunization } from \"../../customHooks/useArchiveImmunization\";\r\nimport { fetchPatientVaccinationHistory } from \"../../services/fetchPatientVaccinationHistory\";\r\nimport { getVaccinatedPatientDataKey } from \"../../utils/queryKeys\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Card, Accordion } from \"react-bootstrap\";\r\n\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n\r\nconst RecentActivities = (props) => {\r\n  const [query] = useState({\r\n    page: 0,\r\n    pageSize: 20,\r\n    search: \"\",\r\n    id: props?.patientObj?.id,\r\n  });\r\n  const [activeAccordionHeaderShadow, setActiveAccordionHeaderShadow] =\r\n    useState(0);\r\n\r\n  const { data, isLoading } = useQuery(\r\n    [getVaccinatedPatientDataKey, query],\r\n    () => fetchPatientVaccinationHistory(query)\r\n  );\r\n\r\n  const LoadViewPage = (row, action) => {\r\n    if (row.immunizationType === \"ROUTINE_IMMUNIZATION\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"routine-immunization-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else if (row.immunizationType === \"TETANUS_IMMUNIZATION\") {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"tetanus-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    } else {\r\n      props.setActiveContent({\r\n        ...props.activeContent,\r\n        route: \"covid-patient\",\r\n        id: row.id,\r\n        actionType: action,\r\n      });\r\n    }\r\n  };\r\n\r\n  const LoadDeletePage = (row) => {\r\n    mutate(row.id);\r\n  };\r\n\r\n  const { mutate } = useArchiveImmunization(props);\r\n\r\n  const ActivityName = (name) => {\r\n    if (name === \"ROUTINE_IMMUNIZATION\") {\r\n      return \"RI\";\r\n    } else if (name === \"COVID_IMMUNIZATION\") {\r\n      return \"CI\";\r\n    } else if (name === \"TETANUS_IMMUNIZATION\") {\r\n      return \"TI\";\r\n    } else {\r\n      return \"IM\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-xl-12 col-xxl-12 col-lg-12\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header  border-0 pb-0\">\r\n            <h4 className=\"card-title\">\r\n              <b>Recent Activities</b>{\" \"}\r\n            </h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {isLoading === false ? (\r\n              <>\r\n                <PerfectScrollbar\r\n                  style={{ height: \"370px\" }}\r\n                  id=\"DZ_W_Todo1\"\r\n                  className=\"widget-media dz-scroll ps ps--active-y\"\r\n                >\r\n                  <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                      {!isLoading && data?.content?.map?.((data, index) => (\r\n                        <div className=\"accordion-item\" key={index}>\r\n                          <Accordion.Toggle\r\n                            as={Card.Text}\r\n                            eventKey={`${index}`}\r\n                            className={`accordion-header ${\r\n                              activeAccordionHeaderShadow === 1\r\n                                ? \"\"\r\n                                : \"collapsed\"\r\n                            } accordion-header-info`}\r\n                            onClick={() =>\r\n                              setActiveAccordionHeaderShadow(\r\n                                activeAccordionHeaderShadow === 1 ? -1 : index\r\n                              )\r\n                            }\r\n                          >\r\n                            <span className=\"accordion-header-icon\"></span>\r\n                            <span className=\"accordion-header-text\">\r\n                              Vaccination Date : <span className=\"\">{data.vaccinationDate}</span>{\" \"}\r\n                            </span>\r\n                            <span className=\"accordion-header-indicator\"></span>\r\n                          </Accordion.Toggle>\r\n                          <Accordion.Collapse\r\n                            eventKey={`${index}`}\r\n                            className=\"accordion__body\"\r\n                          >\r\n                            <div className=\"accordion-body-text\">\r\n                              <ul className=\"timeline\">\r\n                                \r\n                                      <li>\r\n                                        <div className=\"timeline-panel\">\r\n                                          <div\r\n                                            className={\r\n                                              index % 2 === 0\r\n                                                ? \"media me-2 media-info\"\r\n                                                : \"media me-2 media-success\"\r\n                                            }\r\n                                          >\r\n                                            {ActivityName(\r\n                                              data.immunizationType\r\n                                            )}\r\n                                          </div>\r\n                                          <div className=\"media-body\">\r\n                                            <h5 className=\"mb-1\">\r\n                                              { data.immunizationType}\r\n                                            </h5>\r\n                                            <small className=\"d-block\">\r\n                                              {data.vaccinationDate}\r\n                                            </small>\r\n                                          </div>\r\n\r\n                                          <Dropdown className=\"dropdown\">\r\n                                            <Dropdown.Toggle\r\n                                              variant=\" light\"\r\n                                              className=\"i-false p-0 btn-info sharp\"\r\n                                            >\r\n                                              <svg\r\n                                                width=\"18px\"\r\n                                                height=\"18px\"\r\n                                                viewBox=\"0 0 24 24\"\r\n                                                version=\"1.1\"\r\n                                              >\r\n                                                <g\r\n                                                  stroke=\"none\"\r\n                                                  strokeWidth=\"1\"\r\n                                                  fill=\"none\"\r\n                                                  fillRule=\"evenodd\"\r\n                                                >\r\n                                                  <rect\r\n                                                    x=\"0\"\r\n                                                    y=\"0\"\r\n                                                    width=\"24\"\r\n                                                    height=\"24\"\r\n                                                  />\r\n                                                  <circle\r\n                                                    fill=\"#000000\"\r\n                                                    cx=\"5\"\r\n                                                    cy=\"12\"\r\n                                                    r=\"2\"\r\n                                                  />\r\n                                                  <circle\r\n                                                    fill=\"#000000\"\r\n                                                    cx=\"12\"\r\n                                                    cy=\"12\"\r\n                                                    r=\"2\"\r\n                                                  />\r\n                                                  <circle\r\n                                                    fill=\"#000000\"\r\n                                                    cx=\"19\"\r\n                                                    cy=\"12\"\r\n                                                    r=\"2\"\r\n                                                  />\r\n                                                </g>\r\n                                              </svg>\r\n                                            </Dropdown.Toggle>\r\n                                            <Dropdown.Menu className=\"dropdown-menu\">\r\n                                              <Dropdown.Item\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={() =>\r\n                                                  LoadViewPage(data, \"view\")\r\n                                                }\r\n                                              >\r\n                                                View\r\n                                              </Dropdown.Item>\r\n\r\n                                              <Dropdown.Item\r\n                                                className=\"dropdown-item\"\r\n                                                onClick={() =>\r\n                                                  LoadViewPage(\r\n                                                    data,\r\n                                                    \"update\"\r\n                                                  )\r\n                                                }\r\n                                              >\r\n                                                Update\r\n                                              </Dropdown.Item>\r\n\r\n                                              <Dropdown.Item\r\n                                                className=\"dropdown-item\"\r\n                                                to=\"/widget-basic\"\r\n                                                onClick={() =>\r\n                                                  LoadDeletePage(data)\r\n                                                }\r\n                                              >\r\n                                                Delete\r\n                                              </Dropdown.Item>\r\n                                            </Dropdown.Menu>\r\n                                          </Dropdown>\r\n                                        </div>\r\n                                      </li>\r\n                                  \r\n                              </ul>\r\n                            </div>\r\n                          </Accordion.Collapse>\r\n                        </div>\r\n                      ))}\r\n                    </>\r\n                  </Accordion>\r\n                </PerfectScrollbar>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p>Loading please wait...</p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentActivities;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport PatientCardDetail from \"./PatientCard\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from \"./SubMenu\";\r\nimport PatientVaccinationHistory from \"./../Vaccination/VaccinationHistory\";\r\nimport ImmunizationHome from \"../Immunization/ImmunizationHome\";\r\nimport Tetanus from \"../Tetanus/TetanusHome\";\r\nimport CovidVaccinationHome from \"../Covid/CovidVaccinationHome\";\r\nimport RecentActivities from \"../History/RecentActivities\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"20.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  let history = useHistory();\r\n  const [art, setArt] = useState(false);\r\n  const [activeContent, setActiveContent] = useState({\r\n    route: \"patient-vaccination-history\",\r\n    id: \"\",\r\n    activeTab: \"home\",\r\n    actionType: \"create\",\r\n    obj: {},\r\n  });\r\n  const { classes } = props;\r\n  const patientObj = useMemo(() => {\r\n    return history.location && history.location.state\r\n      ? history.location.state.patientObj\r\n      : {};\r\n  }, [history.location]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Immunization /</Link> Patient Dashboard\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <PatientCardDetail\r\n            patientObj={patientObj}\r\n            setArt={setArt}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <SubMenu\r\n            patientObj={patientObj}\r\n            art={art}\r\n            setActiveContent={setActiveContent}\r\n          />\r\n          <div style={{marginTop: 30}}>\r\n            {activeContent.route === \"vaccination-history\" && (\r\n              <PatientVaccinationHistory\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n            {activeContent.route === \"routine-immunization-patient\" && (\r\n              <ImmunizationHome\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n            {activeContent.route === \"tetanus-patient\" && (\r\n              <Tetanus\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n            {activeContent.route === \"covid-patient\" && (\r\n              <CovidVaccinationHome\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n\r\n            {activeContent.route === \"patient-vaccination-history\" && (\r\n              <RecentActivities\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )}\r\n            {/* {activeContent.route === \"patient-vaccination-history\" && (\r\n              <RecentHistory\r\n                patientObj={patientObj}\r\n                setActiveContent={setActiveContent}\r\n                activeContent={activeContent}\r\n              />\r\n            )} */}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","/* eslint-disable valid-typeof */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormGroup, Label, Spinner, Input, Form } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faCheckSquare,\r\n  faCoffee,\r\n  faEdit,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport * as moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport \"./patient.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Label as LabelSui } from \"semantic-ui-react\";\r\nimport { queryClient } from \"../../utils/queryClient\";\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    //maxWidth: 752,\r\n    //flexGrow: 1,\r\n    \"& .card-title\": {\r\n      color: \"#fff\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& .form-control\": {\r\n      borderRadius: \"0.25rem\",\r\n      height: \"41px\",\r\n    },\r\n    \"& .card-header:first-child\": {\r\n      borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\",\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n      display: \" block !important\",\r\n    },\r\n    \"& select\": {\r\n      \"-webkit-appearance\": \"listbox !important\",\r\n    },\r\n    \"& p\": {\r\n      color: \"red\",\r\n    },\r\n    \"& label\": {\r\n      fontSize: \"14px\",\r\n      color: \"#014d88\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"12.8px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}));\r\n\r\nconst RegisterPatient = (props) => {\r\n  const [basicInfo, setBasicInfo] = useState({\r\n    active: true,\r\n    streetAddress: \"\",\r\n    address: [],\r\n    contact: [],\r\n    contactPoint: [],\r\n    dateOfBirth: \"\",\r\n    deceased: false,\r\n    deceasedDateTime: null,\r\n    firstName: \"\",\r\n    genderId: \"\",\r\n    identifier: \"\",\r\n    otherName: \"\",\r\n    maritalStatusId: \"\",\r\n    educationId: \"\",\r\n    employmentStatusId: \"\",\r\n    dateOfRegistration: \"\",\r\n    isDateOfBirthEstimated: null,\r\n    age: \"\",\r\n    phoneNumber: \"\",\r\n    altPhonenumber: \"\",\r\n    dob: \"\",\r\n    countryId: 1,\r\n    stateId: \"\",\r\n    district: \"\",\r\n    sexId: \"\",\r\n    ninNumber: \"\",\r\n  });\r\n  const [relatives, setRelatives] = useState({\r\n    address: \"\",\r\n    phone: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    relationshipId: \"\",\r\n    lastName: \"\",\r\n    middleName: \"\",\r\n  });\r\n\r\n  let contactArray = [];\r\n  const [allContacts, setAllContacts] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [disabledAgeBaseOnAge] = useState(false);\r\n  const [ageDisabled, setAgeDisabled] = useState(true);\r\n  const [showRelative, setShowRelative] = useState(false);\r\n  const [patientFacilityId, setPatientFacilityId] = useState(null);\r\n  const [genders, setGenders] = useState([]);\r\n  const [maritalStatusOptions, setMaritalStatusOptions] = useState([]);\r\n  const [educationOptions, setEducationOptions] = useState([]);\r\n  const [occupationOptions, setOccupationOptions] = useState([]);\r\n  const [relationshipOptions, setRelationshipOptions] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions] = useState(\r\n    []\r\n  );\r\n  const [patientDTO, setPatientDTO] = useState({\r\n    person: \"\",\r\n    hivEnrollment: \"\",\r\n  });\r\n  const userDetail =\r\n    props.location && props.location.state ? props.location.state.user : null;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //status for hospital Number\r\n  const [hospitalNumStatus, setHospitalNumStatus] = useState(false);\r\n  const [hospitalNumStatus2, setHospitalNumStatus2] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggle = () => setOpen(!open);\r\n  const locationState = location.state;\r\n  let patientId = null;\r\n  patientId = locationState ? locationState.patientId : null;\r\n\r\n  const loadState = (stateId) => {\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const getPatient = useCallback(async () => {\r\n    if (patientId) {\r\n      const response = await axios.get(`${baseUrl}patient/${patientId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const sexCodeset = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const patient = response.data;\r\n\r\n      console.log(\"get patient\", patient?.contact?.contact);\r\n\r\n      setAllContacts(patient?.contact?.contact);\r\n      setPatientFacilityId(patient.facilityId);\r\n      const identifiers = patient.identifier;\r\n      const address = patient.address;\r\n      const contactPoint = patient?.contactPoint;\r\n      const hospitalNumber = identifiers?.identifier?.find(\r\n        (obj) => obj.type === \"HospitalNumber\"\r\n      );\r\n\r\n      const sex = _.find(sexCodeset.data, {\r\n        display: _.upperFirst(_.lowerCase(patient.sex)),\r\n      }).id;\r\n\r\n      const phone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type === \"phone\")\r\n      );\r\n\r\n      const email = contactPoint?.contactPoint?.find(\r\n        (obj) => obj.type === \"email\"\r\n      );\r\n      const altphone = phoneNumberFormatCheck(\r\n        contactPoint?.contactPoint?.find((obj) => obj.type === \"altphone\")\r\n      );\r\n\r\n      const country =\r\n        address && address?.address && address?.address.length > 0\r\n          ? address.address[0]\r\n          : null;\r\n\r\n      if (country.stateId) {\r\n        loadState(country.stateId);\r\n      }\r\n\r\n      setBasicInfo({\r\n        active: true,\r\n        streetAddress: country.city,\r\n        address: [],\r\n        contact: [],\r\n        contactPoint: [],\r\n        dateOfBirth: \"\",\r\n        deceased: false,\r\n        deceasedDateTime: null,\r\n        hospitalNumber: hospitalNumber.value,\r\n        firstName: patient.firstName,\r\n        lastName: patient.surname,\r\n        genderId: \"\",\r\n        identifier: \"\",\r\n        otherName: \"\",\r\n        maritalStatusId: patient.maritalStatus?.id,\r\n        educationId: patient.education?.id,\r\n        employmentStatusId: patient.employmentStatus?.id,\r\n        dateOfRegistration: patient.dateOfRegistration,\r\n        isDateOfBirthEstimated: patient.dateOfBirth === \"Actual\" ? false : true,\r\n        age: calculate_age(patient.dateOfBirth),\r\n        phoneNumber: phone?.value,\r\n        altPhonenumber: altphone?.value,\r\n        dob: patient.dateOfBirth,\r\n        countryId: 1,\r\n        stateId: country.stateId,\r\n        district: parseInt(country.district),\r\n        landmark: country.line[0],\r\n        sexId: sex,\r\n        ninNumber: \"\",\r\n        email: email?.value,\r\n      });\r\n    }\r\n  }, [patientId]);\r\n\r\n  useEffect(() => {\r\n    loadGenders();\r\n    loadMaritalStatus();\r\n    loadEducation();\r\n    loadOccupation();\r\n    loadRelationships();\r\n    loadTopLevelCountry();\r\n    GetCountry();\r\n    setStateByCountryId();\r\n    getPatient();\r\n    if (basicInfo.dateOfRegistration < basicInfo.dob) {\r\n      toast.error(\"Date of registration can not be earlier than date of birth\");\r\n    }\r\n  }, [getPatient]);\r\n\r\n  const loadGenders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/SEX`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setGenders(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadMaritalStatus = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/MARITAL_STATUS`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setMaritalStatusOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadEducation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/EDUCATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEducationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadOccupation = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/OCCUPATION`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setOccupationOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadRelationships = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setRelationshipOptions(response.data.sort());\r\n    } catch (e) {}\r\n  }, []);\r\n  const loadTopLevelCountry = useCallback(async () => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/0`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    settopLevelUnitCountryOptions(response.data.sort());\r\n  }, []);\r\n  const loadOrganisationUnitsByParentId = async (parentId) => {\r\n    const response = await axios.get(\r\n      `${baseUrl}organisation-units/parent-organisation-units/${parentId}`,\r\n      { headers: { Authorization: `Bearer ${token}` } }\r\n    );\r\n    return response.data;\r\n  };\r\n  const calculate_age = (dob) => {\r\n    const today = new Date();\r\n    const dateParts = dob.split(\"-\");\r\n    const birthDate = new Date(dob); // create a date object directlyfrom`dob1`argument\r\n    let age_now = today.getFullYear() - birthDate.getFullYear();\r\n\r\n    return age_now;\r\n  };\r\n  const phoneNumberFormatCheck = (phone) => {\r\n    //console.log(\"err\", phone);\r\n    if (\r\n      phone !== undefined &&\r\n      typeof phone?.value !== null &&\r\n      typeof phone?.value !== \"undefined\" &&\r\n      phone?.value?.charAt(0) === \"0\"\r\n    ) {\r\n      phone.value = phone.value.replace(\"0\", \"234\");\r\n    }\r\n    return phone;\r\n  };\r\n  //Country List\r\n  const GetCountry = () => {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/0`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setCountries(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Get States from selected country\r\n  const getStates = (e) => {\r\n    const getCountryId = e.target.value;\r\n    setStateByCountryId(1);\r\n    setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n  };\r\n  //Get list of State\r\n  function setStateByCountryId() {\r\n    axios\r\n      .get(`${baseUrl}organisation-units/parent-organisation-units/1`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setStates(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n  //fetch province\r\n  const getProvinces = (e) => {\r\n    const stateId = e.target.value;\r\n    setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n    axios\r\n      .get(\r\n        `${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setProvinces(response.data.sort());\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n  //Date of Birth and Age handle\r\n  const handleDobChange = (e) => {\r\n    if (e.target.value) {\r\n      const today = new Date();\r\n      const birthDate = new Date(e.target.value);\r\n      let age_now = today.getFullYear() - birthDate.getFullYear();\r\n      //   const m = today.getMonth() - birthDate.getMonth();\r\n      //   if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n      //     age_now--;\r\n      //   }\r\n      basicInfo.age = age_now;\r\n      //setBasicInfo({...basicInfo, age: age_now});\r\n    } else {\r\n      setBasicInfo({ ...basicInfo, age: \"\" });\r\n    }\r\n    setBasicInfo({ ...basicInfo, dob: e.target.value });\r\n    if (basicInfo.age !== \"\" && basicInfo.age >= 60) {\r\n      toggle();\r\n    }\r\n  };\r\n  const handleDateOfBirthChange = (e) => {\r\n    if (e.target.value === \"Actual\") {\r\n      setAgeDisabled(true);\r\n    } else if (e.target.value === \"Estimated\") {\r\n      setAgeDisabled(false);\r\n    }\r\n  };\r\n  const handleAgeChange = (e) => {\r\n    const ageNumber = e.target.value.replace(/\\D/g, \"\");\r\n    if (!ageDisabled && ageNumber) {\r\n      const currentDate = new Date();\r\n      currentDate.setDate(15);\r\n      currentDate.setMonth(5);\r\n      const estDob = moment(currentDate.toISOString());\r\n      const dobNew = estDob.add(ageNumber * -1, \"years\");\r\n      //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n      basicInfo.dob = moment(dobNew).format(\"YYYY-MM-DD\");\r\n      if (ageNumber !== \"\" && ageNumber >= 60) {\r\n        toggle();\r\n      }\r\n    }\r\n    setBasicInfo({ ...basicInfo, age: ageNumber });\r\n  };\r\n\r\n  const handleInputChangeBasic = (e) => {\r\n    setBasicInfo({ ...basicInfo, [e.target.name]: e.target.value });\r\n\r\n    if (e.target.name === \"firstName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"lastName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"middleName\" && e.target.value !== \"\") {\r\n      const name = alphabetOnly(e.target.value);\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: name });\r\n    }\r\n    if (e.target.name === \"ninNumber\" && e.target.value !== \"\") {\r\n      const ninNumberValue = checkNumberLimit(\r\n        e.target.value.replace(/\\D/g, \"\")\r\n      );\r\n      setBasicInfo({ ...basicInfo, [e.target.name]: ninNumberValue });\r\n    }\r\n    if (e.target.name === \"hospitalNumber\" && e.target.value !== \"\") {\r\n      async function getHosiptalNumber() {\r\n        const hosiptalNumber = e.target.value;\r\n        const response = await axios.post(\r\n          `${baseUrl}patient/exist/hospital-number`,\r\n          hosiptalNumber,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"text/plain\",\r\n            },\r\n          }\r\n        );\r\n        if (response.data !== true) {\r\n          setHospitalNumStatus(false);\r\n          errors.hospitalNumber = \"\";\r\n          //setObjValues({ ...objValues, uniqueId: e.target.value });\r\n          setHospitalNumStatus2(true);\r\n        } else {\r\n          errors.hospitalNumber = \"\";\r\n          toast.error(\"Error! Hosiptal Number already exist\");\r\n          setHospitalNumStatus(true);\r\n          setHospitalNumStatus2(false);\r\n        }\r\n      }\r\n      getHosiptalNumber();\r\n    }\r\n  };\r\n\r\n  //Function to show relatives\r\n  const handleAddRelative = () => {\r\n    setShowRelative(true);\r\n  };\r\n  //Function to cancel the relatives form\r\n  const handleCancelSaveRelationship = () => {\r\n    setShowRelative(false);\r\n  };\r\n  /*****  Validation  Relationship Input*/\r\n  const validateRelatives = () => {\r\n    console.log(relatives)\r\n    const nigerianPhoneNumberRegex = /^(\\+?234|0)([789]\\d{9})$/;\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n\r\n    let temp = { ...errors };\r\n    temp.firstName = relatives.firstName ? \"\" : \"First Name is required\";\r\n    //temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n    temp.phone = relatives.phone  && !nigerianPhoneNumberRegex.test(relatives.phone)? \"Check Phone Number.\" : \"\"\r\n    temp.contactEmail = relatives.email  && !emailRegex.test(relatives.email)? \"Check Email Address.\" : \"\"\r\n    temp.relationshipId = relatives.relationshipId\r\n      ? \"\"\r\n      : \"Relationship Type is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n  //Function to add relatives\r\n  const handleSaveRelationship = () => {\r\n    if (validateRelatives()) {\r\n      const contact = {\r\n        address: {\r\n          line: [relatives.address],\r\n        },\r\n        contactPoint: {\r\n          type: \"phone\",\r\n          value: relatives.phone,\r\n        },\r\n        firstName: relatives.firstName,\r\n        fullName:\r\n          relatives.firstName +\r\n          \" \" +\r\n          relatives.middleName +\r\n          \" \" +\r\n          relatives.lastName,\r\n        relationshipId: relatives.relationshipId,\r\n        surname: relatives.lastName,\r\n        otherName: relatives.middleName,\r\n      };\r\n\r\n      if (allContacts === undefined) {\r\n        contactArray.push(contact);\r\n        setAllContacts(contactArray);\r\n      } else {\r\n        setAllContacts([...allContacts, contact]);\r\n      }\r\n      setRelatives({\r\n        address: \"\",\r\n        phone: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        relationshipId: \"\",\r\n        lastName: \"\",\r\n        middleName: \"\",\r\n      });\r\n    }\r\n  };\r\n  const handleDeleteRelative = (index) => {\r\n    allContacts.splice(index, 1);\r\n    setAllContacts([...allContacts]);\r\n  };\r\n  const handleEditRelative = (relative, index) => {\r\n    console.log(relative);\r\n    setRelatives(relative);\r\n    setShowRelative(true);\r\n    allContacts.splice(index, 1);\r\n  };\r\n  const getRelationship = (relationshipId) => {\r\n    const relationship = relationshipOptions.find(\r\n      (obj) => obj.id === relationshipId\r\n    );\r\n    return relationship ? relationship.display : \"\";\r\n  };\r\n  const handleInputChangeRelatives = (e) => {\r\n    setRelatives({ ...relatives, [e.target.name]: e.target.value });\r\n  };\r\n  /*****  Validation  */\r\n  const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\";\r\n    temp.hospitalNumber = basicInfo.hospitalNumber\r\n      ? \"\"\r\n      : \"Hospital Number  is required.\";\r\n    //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n\r\n    temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\";\r\n    temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\";\r\n    temp.dateOfRegistration = basicInfo.dateOfRegistration\r\n      ? \"\"\r\n      : \"Date of Registration is required.\";\r\n    temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\";\r\n    temp.streetAddress = basicInfo.streetAddress ? \"\" : \"Address is required.\";\r\n    //temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n    temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\";\r\n    temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\";\r\n    temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\";\r\n    temp.employmentStatusId = basicInfo.employmentStatusId\r\n      ? \"\"\r\n      : \"Employee Status  is required.\";\r\n    setErrors({ ...temp });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      setSaving(true);\r\n\r\n      //     });\r\n      try {\r\n        const patientForm = {\r\n          active: true,\r\n          address: [\r\n            {\r\n              city: basicInfo.streetAddress,\r\n              countryId: basicInfo.countryId,\r\n              district: basicInfo.district,\r\n              line: [basicInfo.landmark],\r\n              organisationUnitId: 0,\r\n              postalCode: \"\",\r\n              stateId: basicInfo.stateId,\r\n            },\r\n          ],\r\n          contact: allContacts,\r\n          contactPoint: [],\r\n          dateOfBirth: basicInfo.dob,\r\n          deceased: false,\r\n          deceasedDateTime: null,\r\n          firstName: basicInfo.firstName,\r\n          genderId: basicInfo.sexId,\r\n          sexId: basicInfo.sexId,\r\n          identifier: [\r\n            {\r\n              assignerId: 1,\r\n              type: \"HospitalNumber\",\r\n              value: basicInfo.hospitalNumber,\r\n            },\r\n          ],\r\n          otherName: basicInfo.middleName,\r\n          maritalStatusId: basicInfo.maritalStatusId,\r\n          surname: basicInfo.lastName,\r\n          educationId: basicInfo.educationId,\r\n          employmentStatusId: basicInfo.employmentStatusId,\r\n          dateOfRegistration: basicInfo.dateOfRegistration,\r\n          isDateOfBirthEstimated:\r\n            basicInfo.dateOfBirth === \"Actual\" ? false : true,\r\n          ninNumber: basicInfo.ninNumber,\r\n        };\r\n\r\n        const phone = {\r\n          type: \"phone\",\r\n          value: basicInfo.phoneNumber,\r\n        };\r\n        if (basicInfo.email) {\r\n          const email = {\r\n            type: \"email\",\r\n            value: basicInfo.email,\r\n          };\r\n          patientForm.contactPoint.push(email);\r\n        }\r\n        if (basicInfo.altPhonenumber) {\r\n          const altPhonenumber = {\r\n            type: \"altphone\",\r\n            value: basicInfo.altPhonenumber,\r\n          };\r\n          patientForm.contactPoint.push(altPhonenumber);\r\n        }\r\n        patientForm.contactPoint.push(phone);\r\n        patientForm.id = patientId;\r\n        patientDTO.person = patientForm;\r\n\r\n        if (patientId) {\r\n          patientForm.id = null;\r\n          patientForm.facilityId = patientFacilityId;\r\n          const response = await axios.put(\r\n            `${baseUrl}patient/${patientId}`,\r\n            patientForm,\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n          await queryClient.refetchQueries();\r\n          toast.success(\"Patient Updated successfully\");\r\n          setSaving(false);\r\n          history.push(\"/patient-vaccination-history\", {\r\n            patientObj: response.data,\r\n          });\r\n        } else {\r\n          const response = await axios.post(`${baseUrl}patient`, patientForm, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n          await queryClient.refetchQueries();\r\n          toast.success(\"Patient Register successfully\");\r\n          setSaving(false);\r\n          history.push(\"/patient-vaccination-history\", {\r\n            patientObj: response.data,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setSaving(false);\r\n        if (error.response && error.response.data) {\r\n          let errorMessage =\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\"\r\n              ? error.response.data.apierror.message\r\n              : \"Something went wrong, please try again\";\r\n          if (\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.message !== \"\" &&\r\n            error.response.data.apierror &&\r\n            error.response.data.apierror.subErrors[0].message !== \"\"\r\n          ) {\r\n            toast.error(\r\n              error.response.data.apierror.message +\r\n                \" : \" +\r\n                error.response.data.apierror.subErrors[0].field +\r\n                \" \" +\r\n                error.response.data.apierror.subErrors[0].message,\r\n              { position: toast.POSITION.BOTTOM_CENTER }\r\n            );\r\n          } else {\r\n            toast.error(errorMessage, {\r\n              position: toast.POSITION.BOTTOM_CENTER,\r\n            });\r\n          }\r\n        } else {\r\n          toast.error(\"Something went wrong. Please try again...\", {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const alphabetOnly = (value) => {\r\n    const result = value.replace(/[^a-z]/gi, \"\");\r\n    return result;\r\n  };\r\n\r\n  const checkPhoneNumber = (e, inputName) => {\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setRelatives({ ...relatives, [inputName]: NumberValue });\r\n  };\r\n\r\n  const checkNumberLimit = (e) => {\r\n    const limit = 11;\r\n    const acceptedNumber = e.slice(0, limit);\r\n    return acceptedNumber;\r\n  };\r\n  const handleInputChangePhoneNumber = (e, inputName) => {\r\n    const limit = 11;\r\n    const NumberValue = checkNumberLimit(e.target.value.replace(/\\D/g, \"\"));\r\n    setBasicInfo({ ...basicInfo, [inputName]: NumberValue });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push({ pathname: \"/\" });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer autoClose={3000} hideProgressBar />\r\n      <div\r\n        className=\"row page-titles mx-0\"\r\n        style={{ marginTop: \"0px\", marginBottom: \"-10px\" }}\r\n      >\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\">\r\n            <h4>\r\n              {\" \"}\r\n              <Link to={\"/\"}>Patient /</Link> Patient Registration\r\n            </h4>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/\",\r\n          state: \"users\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\" float-end mr-10 pr-10\"\r\n          style={{\r\n            backgroundColor: \"#014d88\",\r\n            fontWeight: \"bolder\",\r\n            margingRight: \"-40px\",\r\n          }}\r\n          startIcon={<TiArrowBack />}\r\n        >\r\n          <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n            Back{\" \"}\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n      <br />\r\n      <br />\r\n\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <div className=\"col-xl-12 col-lg-12\">\r\n            <Form>\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    {userDetail === null\r\n                      ? \"Basic Information\"\r\n                      : \"Edit User Information\"}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className=\"basic-form\">\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"dateOfRegistration\">\r\n                            Date of Registration{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>{\" \"}\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateOfRegistration\"\r\n                            id=\"dateOfRegistration\"\r\n                            min=\"1983-12-31\"\r\n                            max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dateOfRegistration}\r\n                            //value={basicInfo.dateOfRegistration===\"\"? moment(new Date()).format(\"YYYY-MM-DD\") : basicInfo.dateOfRegistration}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.dateOfRegistration !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.dateOfRegistration}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"patientId\">\r\n                            Hospital Number{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"hospitalNumber\"\r\n                            id=\"hospitalNumber\"\r\n                            value={basicInfo.hospitalNumber}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.hospitalNumber !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.hospitalNumber}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {hospitalNumStatus === true ? (\r\n                            <span className={classes.error}>\r\n                              {\"Hospital number already exist\"}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"ninNumber\">\r\n                            National Identity Number (NIN){\" \"}\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"ninNumber\"\r\n                            value={basicInfo.ninNumber}\r\n                            id=\"ninNumber\"\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n                      {/* <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}HIV Enrollment\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                            </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label for=\"firstName\">\r\n                            First Names <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            id=\"firstName\"\r\n                            value={basicInfo.firstName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.firstName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.firstName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>Middle Name</Label>\r\n                          <Input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"middleName\"\r\n                            id=\"middleName\"\r\n                            value={basicInfo.middleName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Last Name <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            id=\"lastName\"\r\n                            value={basicInfo.lastName}\r\n                            onChange={handleInputChangeBasic}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                          {errors.lastName !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.lastName}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Sex <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"sexId\"\r\n                            id=\"sexId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.sexId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {genders.map((gender, index) => (\r\n                              <option key={gender.id} value={gender.id}>\r\n                                {gender.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.sexId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.sexId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                      <div className=\"form-group mb-2 col-md-2\">\r\n                        <FormGroup>\r\n                          <Label>Date Of Birth</Label>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Actual\"\r\n                                name=\"dateOfBirth\"\r\n                                defaultChecked\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Actual\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"radio\">\r\n                            <label>\r\n                              <input\r\n                                type=\"radio\"\r\n                                value=\"Estimated\"\r\n                                name=\"dateOfBirth\"\r\n                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                style={{\r\n                                  border: \"1px solid #014D88\",\r\n                                  borderRadius: \"0.2rem\",\r\n                                }}\r\n                              />{\" \"}\r\n                              Estimated\r\n                            </label>\r\n                          </div>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Date </Label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dob\"\r\n                            min=\"1940-01-01\"\r\n                            id=\"dob\"\r\n                            max={basicInfo?.dateOfRegistration || moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                            value={basicInfo.dob}\r\n                            onChange={handleDobChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Age</Label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"age\"\r\n                            className=\"form-control\"\r\n                            id=\"age\"\r\n                            min=\"1\"\r\n                            value={basicInfo.age}\r\n                            disabled={ageDisabled}\r\n                            onChange={handleAgeChange}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                        {basicInfo.age !== \"\" && basicInfo.age >= 80 ? (\r\n                          <span className={classes.error}>\r\n                            Are you sure of the age\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={\"row\"}>\r\n                      {/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                      <div className=\"form-group mb-3 col-md-3\">\r\n                        <FormGroup>\r\n                          <Label>Marital Status</Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"maritalStatusId\"\r\n                            id=\"maritalStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.maritalStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {maritalStatusOptions.map(\r\n                              (maritalStatusOption, index) => (\r\n                                <option\r\n                                  key={maritalStatusOption.id}\r\n                                  value={maritalStatusOption.id}\r\n                                >\r\n                                  {maritalStatusOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Employment Status{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"employmentStatusId\"\r\n                            id=\"employmentStatusId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.employmentStatusId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {occupationOptions.map(\r\n                              (occupationOption, index) => (\r\n                                <option\r\n                                  key={occupationOption.id}\r\n                                  value={occupationOption.id}\r\n                                >\r\n                                  {occupationOption.display}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                          {errors.employmentStatusId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.employmentStatusId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n\r\n                      <div className=\"form-group  col-md-4\">\r\n                        <FormGroup>\r\n                          <Label>\r\n                            Education Level{\" \"}\r\n                            <span style={{ color: \"red\" }}> *</span>\r\n                          </Label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"educationId\"\r\n                            id=\"educationId\"\r\n                            onChange={handleInputChangeBasic}\r\n                            value={basicInfo.educationId}\r\n                            style={{\r\n                              border: \"1px solid #014D88\",\r\n                              borderRadius: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            <option value={\"\"}>Select</option>\r\n                            {educationOptions.map((educationOption, index) => (\r\n                              <option\r\n                                key={educationOption.id}\r\n                                value={educationOption.id}\r\n                              >\r\n                                {educationOption.display}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {errors.educationId !== \"\" ? (\r\n                            <span className={classes.error}>\r\n                              {errors.educationId}\r\n                            </span>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </FormGroup>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Contact Details\r\n                  </h5>\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Phone Number <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        {/* <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   \r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                /> */}\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phoneNumber\"\r\n                          id=\"phoneNumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"phoneNumber\");\r\n                          }}\r\n                          value={basicInfo.phoneNumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                        {errors.phoneNumber !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.phoneNumber}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                        {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Alt. Phone Number</Label>\r\n                        {/* <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                /> */}\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"altPhonenumber\"\r\n                          id=\"altPhonenumber\"\r\n                          onChange={(e) => {\r\n                            handleInputChangePhoneNumber(e, \"altPhonenumber\");\r\n                          }}\r\n                          value={basicInfo.altPhonenumber}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Email</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          onChange={handleInputChangeBasic}\r\n                          value={basicInfo.email}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          required\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Country <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"countryId\"\r\n                          id=\"countryId\"\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          value={basicInfo.countryId}\r\n                          onChange={getStates}\r\n                          disabled\r\n                        >\r\n                          <option value={\"\"}>Select</option>\r\n                          {countries.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.countryId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.countryId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          State <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"stateId\"\r\n                          id=\"stateId\"\r\n                          value={basicInfo.stateId}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={getProvinces}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {states.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.stateId !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.stateId}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Province/District/LGA{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"district\"\r\n                          id=\"district\"\r\n                          value={basicInfo.district}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                          onChange={handleInputChangeBasic}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {provinces.map((value, index) => (\r\n                            <option key={index} value={value.id}>\r\n                              {value.name}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        {errors.district !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.district}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className={\"row\"}>\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>\r\n                          Street Address{\" \"}\r\n                          <span style={{ color: \"red\" }}> *</span>\r\n                        </Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"streetAddress\"\r\n                          id=\"streetAddress\"\r\n                          value={basicInfo.streetAddress}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                        {errors.streetAddress !== \"\" ? (\r\n                          <span className={classes.error}>\r\n                            {errors.streetAddress}\r\n                          </span>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group  col-md-4\">\r\n                      <FormGroup>\r\n                        <Label>Landmark</Label>\r\n                        <input\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"landmark\"\r\n                          id=\"landmark\"\r\n                          value={basicInfo.landmark}\r\n                          onChange={handleInputChangeBasic}\r\n                          style={{\r\n                            border: \"1px solid #014D88\",\r\n                            borderRadius: \"0.2rem\",\r\n                          }}\r\n                        />\r\n                      </FormGroup>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"card\">\r\n                <div\r\n                  className=\"card-header\"\r\n                  style={{\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                    fontWeight: \"bolder\",\r\n                    borderRadius: \"0.2rem\",\r\n                  }}\r\n                >\r\n                  <h5 className=\"card-title\" style={{ color: \"#fff\" }}>\r\n                    Relationship / Next Of Kin\r\n                  </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"row\">\r\n                    {allContacts && allContacts.length > 0 && (\r\n                      <div className=\"col-xl-12 col-lg-12\">\r\n                        <table style={{ width: \"100%\" }} className=\"mb-3\">\r\n                          <thead className=\"mb-3\">\r\n                            <tr>\r\n                              <th>Relationship Type</th>\r\n                              <th>Name</th>\r\n                              <th>Phone</th>\r\n                              <th>Address</th>\r\n                              <th>Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"mb-3\">\r\n                            {allContacts.map((item, index) => {\r\n                              return (\r\n                                <tr key={item.index} className=\"mb-3\">\r\n                                  <td>\r\n                                    {getRelationship(item.relationshipId)}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item?.firstName +\r\n                                      \" \" +\r\n                                      item?.otherName +\r\n                                      \" \" +\r\n                                      item?.surname}\r\n                                  </td>\r\n                                  <td>{item.contactPoint.value}</td>\r\n                                  <td>{item.address?.line[0]}</td>\r\n                                  <td>\r\n                                  \r\n                                    &nbsp;&nbsp;\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-danger btn-sm removeRow\"\r\n                                      onClick={(e) =>\r\n                                        handleDeleteRelative(index)\r\n                                      }\r\n                                    >\r\n                                      <FontAwesomeIcon icon=\"trash\" />\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                      {showRelative && (\r\n                        <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"relationshipType\">\r\n                                    Relationship Type{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <select\r\n                                    className=\"form-control\"\r\n                                    name=\"relationshipId\"\r\n                                    id=\"relationshipId\"\r\n                                    value={relatives.relationshipId}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  >\r\n                                    <option value={\"\"}>Select</option>\r\n                                    {relationshipOptions.map(\r\n                                      (relative, index) => (\r\n                                        <option\r\n                                          key={relative.id}\r\n                                          value={relative.id}\r\n                                        >\r\n                                          {relative.display}\r\n                                        </option>\r\n                                      )\r\n                                    )}\r\n                                  </select>\r\n                                  {errors.relationshipId !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.relationshipId}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"cfirstName\">\r\n                                    First Name{\" \"}\r\n                                    <span style={{ color: \"red\" }}> *</span>\r\n                                  </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"\r\n                                    value={relatives.firstName}\r\n                                    id=\"firstName\"\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {errors.firstName !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.firstName}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Middle Name</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"middleName\"\r\n                                    id=\"middleName\"\r\n                                    value={relatives.middleName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label>Last Name </Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"\r\n                                    id=\"lastName\"\r\n                                    value={relatives.lastName}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactPhoneNumber\">\r\n                                    Phone Number\r\n                                  </Label>\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    name=\"phone\"\r\n                                    id=\"phone\"\r\n                                    onChange={(e) => {\r\n                                      checkPhoneNumber(e, \"phone\");\r\n                                    }}\r\n                                    value={relatives.phone}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    required\r\n                                  />\r\n                                  {errors.phone !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.phone}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactEmail\">Email</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={relatives.email}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                    required\r\n                                  />\r\n                                  {errors.contactEmail !== \"\" ? (\r\n                                    <span className={classes.error}>\r\n                                      {errors.contactEmail}\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </FormGroup>\r\n                              </div>\r\n\r\n                              <div className=\"form-group mb-3 col-md-3\">\r\n                                <FormGroup>\r\n                                  <Label for=\"contactAddress\">Address</Label>\r\n                                  <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    name=\"address\"\r\n                                    id=\"address\"\r\n                                    value={relatives.address?.city}\r\n                                    style={{\r\n                                      border: \"1px solid #014D88\",\r\n                                      borderRadius: \"0.2rem\",\r\n                                    }}\r\n                                    onChange={handleInputChangeRelatives}\r\n                                  />\r\n                                  {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                </FormGroup>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleSaveRelationship}\r\n                                >\r\n                                  Add\r\n                                </MatButton>\r\n                              </div>\r\n\r\n                              <div className=\"col-1\">\r\n                                <MatButton\r\n                                  type=\"button\"\r\n                                  variant=\"contained\"\r\n                                  color=\"secondary\"\r\n                                  className={classes.button}\r\n                                  onClick={handleCancelSaveRelationship}\r\n                                >\r\n                                  Cancel\r\n                                </MatButton>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\"></div>\r\n                  <MatButton\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleAddRelative}\r\n                    style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n                  >\r\n                    Add a Relative/Next Of Kin\r\n                  </MatButton>\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n              {saving ? <Spinner /> : \"\"}\r\n\r\n              <br />\r\n\r\n              <MatButton\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                onClick={handleSubmit}\r\n                hidden={disabledAgeBaseOnAge}\r\n                disabled={saving}\r\n                style={{ backgroundColor: \"#014d88\", fontWeight: \"bolder\" }}\r\n              >\r\n                {!saving ? (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                ) : (\r\n                  <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                )}\r\n              </MatButton>\r\n\r\n              <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                style={{ backgroundColor: \"#992E62\" }}\r\n                onClick={handleCancel}\r\n              >\r\n                <span style={{ textTransform: \"capitalize\", color: \"#fff\" }}>\r\n                  Cancel\r\n                </span>\r\n              </MatButton>\r\n            </Form>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <Modal\r\n        show={open}\r\n        toggle={toggle}\r\n        className=\"fade\"\r\n        size=\"sm\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        backdrop=\"static\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Are you Sure of the Age entered?</h4>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={toggle}\r\n            style={{ backgroundColor: \"#014d88\", color: \"#fff\" }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPatient;\r\n","import React from \"react\";\r\nimport { MemoryRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Home from \"./main/webapp/jsx/components/Home\";\r\nimport PatientDetail from \"./main/webapp/jsx/components/Patient/PatientDetail\";\r\nimport RegisterPatientPage from \"./main/webapp/jsx/components/Patient/RegisterPatient\";\r\nimport ImmunizationHome from \"./main/webapp/jsx/components/Immunization/ImmunizationHome\";\r\nimport TetanusHome from \"./main/webapp/jsx/components/Tetanus/TetanusHome\";\r\nimport { QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nimport { queryClient } from \"./main/webapp/jsx/utils/queryClient\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <QueryClientProvider client={queryClient}>\r\n        <div>\r\n          <ToastContainer  autoClose={3000} hideProgressBar position=\"bottom-center\"/>\r\n          <Switch>\r\n            <Route path=\"/tetanus-patient\">\r\n              <TetanusHome />\r\n            </Route>\r\n            <Route path=\"/routine-immunization-patient\">\r\n              <ImmunizationHome />\r\n            </Route>\r\n            <Route path=\"/patient-vaccination-history\">\r\n              <PatientDetail />\r\n            </Route>\r\n            <Route path=\"/register-patient\">\r\n              <RegisterPatientPage />\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <ReactQueryDevtools initialIsOpen={false} />\r\n      </QueryClientProvider>\r\n    </Router>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}